:buildSrc:extractPluginRequests UP-TO-DATE
:buildSrc:generatePluginAdapters UP-TO-DATE
:buildSrc:compileJava UP-TO-DATE
:buildSrc:compileGroovy NO-SOURCE
:buildSrc:compileGroovyPlugins UP-TO-DATE
:buildSrc:pluginDescriptors UP-TO-DATE
:buildSrc:processResources UP-TO-DATE
:buildSrc:classes UP-TO-DATE
:buildSrc:jar UP-TO-DATE
:buildSrc:assemble UP-TO-DATE
:buildSrc:compileTestJava NO-SOURCE
:buildSrc:compileTestGroovy NO-SOURCE
:buildSrc:pluginUnderTestMetadata UP-TO-DATE
:buildSrc:processTestResources NO-SOURCE
:buildSrc:testClasses UP-TO-DATE
:buildSrc:test NO-SOURCE
:buildSrc:validatePlugins UP-TO-DATE
:buildSrc:check UP-TO-DATE
:buildSrc:build UP-TO-DATE
jadx version: dev
:jadx-plugins:jadx-raung-input:processResources
:jadx-core:processResources
:jadx-plugins:jadx-plugins-api:compileJava
:jadx-cli:processResources
:compileJava NO-SOURCE
:jadx-plugins:jadx-java-convert:processResources
:jadx-plugins:jadx-java-input:processResources
:jadx-plugins:jadx-dex-input:processResources
:jadx-plugins:compileJava NO-SOURCE
:jadx-gui:processResources
:processResources NO-SOURCE
:jadx-plugins:processResources NO-SOURCE
:classes UP-TO-DATE
:spotbugsMain NO-SOURCE
:jadx-plugins:classes UP-TO-DATE
:jadx-plugins:spotbugsMain NO-SOURCE
:jadx-plugins:jadx-smali-input:processResources
:jadx-plugins:jadx-plugins-api:processResources NO-SOURCE
:jadx-core:compileJava
:jadx-plugins:jadx-java-input:compileJava
:jadx-plugins:jadx-dex-input:compileJava
:jadx-plugins:jadx-plugins-api:classes
:jadx-plugins:jadx-plugins-api:spotbugsMain
:jadx-plugins:jadx-dex-input:classes
:jadx-plugins:jadx-java-convert:compileJava
:jadx-plugins:jadx-smali-input:compileJava
:jadx-plugins:jadx-dex-input:spotbugsMain
:jadx-plugins:jadx-java-input:classes
:jadx-plugins:jadx-raung-input:compileJava
:jadx-plugins:jadx-java-input:spotbugsMain
:jadx-plugins:jadx-smali-input:classes
:jadx-plugins:jadx-smali-input:spotbugsMain
:jadx-plugins:jadx-raung-input:classes
:jadx-plugins:jadx-raung-input:spotbugsMain
:jadx-plugins:jadx-java-convert:classes
:jadx-plugins:jadx-java-convert:spotbugsMain
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
:jadx-core:classes
:jadx-cli:compileJava
:jadx-core:spotbugsMain
:jadx-cli:classes
:jadx-cli:spotbugsMain
:jadx-cli:jar
:jadx-gui:compileJava
H I Dm: Found reliance on default encoding in jadx.plugins.input.smali.SmaliConvert.collectSystemErrors(OutputStream, Callable): new java.io.PrintStream(OutputStream)  At SmaliConvert.java:[line 69]
M V EI2: new jadx.api.plugins.input.data.attributes.types.InnerClassesAttr(Map) may expose internal representation by storing an externally mutable object into InnerClassesAttr.map  At InnerClassesAttr.java:[line 14]
M V EI: jadx.api.plugins.input.data.attributes.types.InnerClassesAttr.getMap() may expose internal representation by returning InnerClassesAttr.map  At InnerClassesAttr.java:[line 18]
SpotBugs ended with exit code 1
M V EI: jadx.api.plugins.input.data.attributes.types.ExceptionsAttr.getList() may expose internal representation by returning ExceptionsAttr.list  At ExceptionsAttr.java:[line 17]
M V EI2: new jadx.api.plugins.input.data.attributes.types.ExceptionsAttr(List) may expose internal representation by storing an externally mutable object into ExceptionsAttr.list  At ExceptionsAttr.java:[line 13]
M V EI: jadx.api.plugins.input.insns.custom.impl.SwitchPayload.getKeys() may expose internal representation by returning SwitchPayload.keys  At SwitchPayload.java:[line 24]
M V EI2: new jadx.api.plugins.input.insns.custom.impl.SwitchPayload(int, int[], int[]) may expose internal representation by storing an externally mutable object into SwitchPayload.targets  At SwitchPayload.java:[line 14]
M V EI2: new jadx.api.plugins.input.insns.custom.impl.SwitchPayload(int, int[], int[]) may expose internal representation by storing an externally mutable object into SwitchPayload.keys  At SwitchPayload.java:[line 13]
M V EI: jadx.api.plugins.input.insns.custom.impl.SwitchPayload.getTargets() may expose internal representation by returning SwitchPayload.targets  At SwitchPayload.java:[line 29]
M V EI: jadx.api.plugins.input.data.annotations.JadxAnnotation.getValues() may expose internal representation by returning JadxAnnotation.values  At JadxAnnotation.java:[line 28]
M V EI2: new jadx.api.plugins.input.data.annotations.JadxAnnotation(AnnotationVisibility, String, Map) may expose internal representation by storing an externally mutable object into JadxAnnotation.values  At JadxAnnotation.java:[line 13]
H I Dm: Found reliance on default encoding in jadx.plugins.input.java.utils.DisasmUtils.inputStreamToString(InputStream): java.io.ByteArrayOutputStream.toString()  At DisasmUtils.java:[line 66]
M V EI2: new jadx.plugins.input.java.JavaClassReader(int, String, byte[]) may expose internal representation by storing an externally mutable object into JavaClassReader.data  At JavaClassReader.java:[line 14]
M V EI: jadx.plugins.input.java.JavaClassReader.getData() may expose internal representation by returning JavaClassReader.data  At JavaClassReader.java:[line 30]
M V EI2: new jadx.plugins.input.java.data.attributes.types.data.RawBootstrapMethod(int, int[]) may expose internal representation by storing an externally mutable object into RawBootstrapMethod.args  At RawBootstrapMethod.java:[line 9]
M V EI: jadx.plugins.input.java.data.attributes.types.data.RawBootstrapMethod.getArgs() may expose internal representation by returning RawBootstrapMethod.args  At RawBootstrapMethod.java:[line 17]
M V EI: jadx.api.plugins.input.data.impl.DebugInfo.getSourceLineMapping() may expose internal representation by returning DebugInfo.sourceLineMap  At DebugInfo.java:[line 21]
M V EI: jadx.api.plugins.input.data.impl.DebugInfo.getLocalVars() may expose internal representation by returning DebugInfo.localVars  At DebugInfo.java:[line 26]
M V EI2: new jadx.api.plugins.input.data.impl.DebugInfo(Map, List) may expose internal representation by storing an externally mutable object into DebugInfo.localVars  At DebugInfo.java:[line 16]
M V EI2: new jadx.api.plugins.input.data.impl.DebugInfo(Map, List) may expose internal representation by storing an externally mutable object into DebugInfo.sourceLineMap  At DebugInfo.java:[line 15]
M V EI2: new jadx.plugins.input.java.JavaLoadResult(List, Closeable) may expose internal representation by storing an externally mutable object into JavaLoadResult.readers  At JavaLoadResult.java:[line 24]
M V EI2: new jadx.plugins.input.dex.sections.DexMethodProto(List, String) may expose internal representation by storing an externally mutable object into DexMethodProto.argTypes  At DexMethodProto.java:[line 14]
M V EI: jadx.plugins.input.dex.sections.DexMethodProto.getArgTypes() may expose internal representation by returning DexMethodProto.argTypes  At DexMethodProto.java:[line 19]
M V EI2: new jadx.plugins.input.java.data.attributes.debuginfo.LineNumberTableAttr(Map) may expose internal representation by storing an externally mutable object into LineNumberTableAttr.lineMap  At LineNumberTableAttr.java:[line 13]
M V EI: jadx.plugins.input.java.data.attributes.debuginfo.LineNumberTableAttr.getLineMap() may expose internal representation by returning LineNumberTableAttr.lineMap  At LineNumberTableAttr.java:[line 17]
Note: /Users/yoo/experiments/JADXecute/jadx-with-jadxecute/jadx-gui/src/main/java/jadx/gui/ui/codearea/SmaliArea.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
M V EI2: new jadx.plugins.input.java.data.DataReader(byte[], int) may expose internal representation by storing an externally mutable object into DataReader.data  At DataReader.java:[line 17]
M V EI: jadx.plugins.input.java.data.DataReader.getBytes() may expose internal representation by returning DataReader.data  At DataReader.java:[line 123]
M V EI2: new jadx.plugins.input.java.data.attributes.types.JavaBootstrapMethodsAttr(List) may expose internal representation by storing an externally mutable object into JavaBootstrapMethodsAttr.list  At JavaBootstrapMethodsAttr.java:[line 15]
M V EI: jadx.plugins.input.java.data.attributes.types.JavaBootstrapMethodsAttr.getList() may expose internal representation by returning JavaBootstrapMethodsAttr.list  At JavaBootstrapMethodsAttr.java:[line 19]
:jadx-gui:classes
:jadx-gui:spotbugsMain
M V EI: jadx.plugins.input.java.data.JavaMethodProto.getArgTypes() may expose internal representation by returning JavaMethodProto.argTypes  At JavaMethodProto.java:[line 24]
M V EI2: jadx.plugins.input.java.data.JavaMethodProto.setArgTypes(List) may expose internal representation by storing an externally mutable object into JavaMethodProto.argTypes  At JavaMethodProto.java:[line 28]
M V EI2: new jadx.api.plugins.input.data.impl.CatchData(int[], String[], int) may expose internal representation by storing an externally mutable object into CatchData.handlers  At CatchData.java:[line 12]
M V EI: jadx.api.plugins.input.data.impl.CatchData.getHandlers() may expose internal representation by returning CatchData.handlers  At CatchData.java:[line 19]
M V EI2: new jadx.api.plugins.input.data.impl.CatchData(int[], String[], int) may expose internal representation by storing an externally mutable object into CatchData.types  At CatchData.java:[line 13]
M V EI: jadx.api.plugins.input.data.impl.CatchData.getTypes() may expose internal representation by returning CatchData.types  At CatchData.java:[line 24]
M V EI: jadx.api.plugins.input.data.attributes.types.AnnotationDefaultClassAttr.getValues() may expose internal representation by returning AnnotationDefaultClassAttr.values  At AnnotationDefaultClassAttr.java:[line 20]
M V EI2: new jadx.api.plugins.input.data.attributes.types.AnnotationDefaultClassAttr(Map) may expose internal representation by storing an externally mutable object into AnnotationDefaultClassAttr.values  At AnnotationDefaultClassAttr.java:[line 16]
M V EI: jadx.plugins.input.javaconvert.ConvertResult.getConverted() may expose internal representation by returning ConvertResult.converted  At ConvertResult.java:[line 23]
M V EI: jadx.api.plugins.input.data.attributes.types.MethodParametersAttr.getList() may expose internal representation by returning MethodParametersAttr.list  At MethodParametersAttr.java:[line 42]
M V EI2: new jadx.api.plugins.input.data.attributes.types.MethodParametersAttr(List) may expose internal representation by storing an externally mutable object into MethodParametersAttr.list  At MethodParametersAttr.java:[line 38]
M V EI: jadx.api.plugins.options.impl.JadxOptionDescription.values() may expose internal representation by returning JadxOptionDescription.values  At JadxOptionDescription.java:[line 40]
M V EI2: new jadx.api.plugins.options.impl.JadxOptionDescription(String, String, String, List) may expose internal representation by storing an externally mutable object into JadxOptionDescription.values  At JadxOptionDescription.java:[line 20]
M V EI: jadx.api.plugins.input.data.impl.ListConsumer.getResult() may expose internal representation by returning ListConsumer.list  At ListConsumer.java:[line 33]
H C NP: Possible null pointer dereference of InsnFormatterInfo.insn in jadx.plugins.input.dex.smali.InsnFormatterInfo.getInsn()  Checked and found to be null at InsnFormatterInfo.java:[line 40]
M D REC: Exception is caught when Exception is not thrown in jadx.api.plugins.utils.ZipSecurity.lambda$readZipEntries$0(BiConsumer, ZipFile, ZipEntry)  At ZipSecurity.java:[line 125]
M V EI2: new jadx.api.plugins.input.data.attributes.types.AnnotationsAttr(Map) may expose internal representation by storing an externally mutable object into AnnotationsAttr.map  At AnnotationsAttr.java:[line 39]
M V EI2: new jadx.plugins.input.java.data.code.CodeDecodeState(JavaClassData, DataReader, int, Set) may expose internal representation by storing an externally mutable object into CodeDecodeState.excHandlers  At CodeDecodeState.java:[line 28]
M V EI2: jadx.plugins.input.java.data.code.CodeDecodeState.setInsn(JavaInsnData) may expose internal representation by storing an externally mutable object into CodeDecodeState.insn  At CodeDecodeState.java:[line 65]
M V EI: jadx.plugins.input.java.data.code.CodeDecodeState.insn() may expose internal representation by returning CodeDecodeState.insn  At CodeDecodeState.java:[line 61]
M V EI2: new jadx.plugins.input.java.data.attributes.types.JavaAnnotationsAttr(List) may expose internal representation by storing an externally mutable object into JavaAnnotationsAttr.list  At JavaAnnotationsAttr.java:[line 27]
M V EI: jadx.plugins.input.java.data.attributes.types.JavaAnnotationsAttr.getList() may expose internal representation by returning JavaAnnotationsAttr.list  At JavaAnnotationsAttr.java:[line 31]
M V EI: jadx.api.plugins.input.data.impl.CallSite.getValues() may expose internal representation by returning CallSite.values  At CallSite.java:[line 34]
M V EI2: new jadx.api.plugins.input.data.impl.CallSite(List) may expose internal representation by storing an externally mutable object into CallSite.values  At CallSite.java:[line 15]
M D SF: Switch statement found in jadx.api.plugins.input.data.impl.CallSite.load() where default case is missing  At CallSite.java:[lines 21-26]
M B NP: jadx.plugins.input.javaconvert.JavaConvertLoader.lambda$repackAndConvertJar$3(ZipFile, ZipEntry) has Boolean return type and returns explicit null  At JavaConvertLoader.java:[line 125]
M V EI: jadx.plugins.input.java.data.attributes.types.JavaParamAnnsAttr.getList() may expose internal representation by returning JavaParamAnnsAttr.list  At JavaParamAnnsAttr.java:[line 24]
M V EI2: new jadx.plugins.input.java.data.attributes.types.JavaParamAnnsAttr(List) may expose internal representation by storing an externally mutable object into JavaParamAnnsAttr.list  At JavaParamAnnsAttr.java:[line 20]
M V EI2: jadx.plugins.input.dex.sections.DexMethodRef.setArgTypes(List) may expose internal representation by storing an externally mutable object into DexMethodRef.argTypes  At DexMethodRef.java:[line 86]
M V EI2: jadx.plugins.input.dex.sections.DexMethodRef.setSectionReader(SectionReader) may expose internal representation by storing an externally mutable object into DexMethodRef.sectionReader  At DexMethodRef.java:[line 38]
M V EI: jadx.plugins.input.dex.sections.DexMethodRef.getArgTypes() may expose internal representation by returning DexMethodRef.argTypes  At DexMethodRef.java:[line 82]
M V EI2: jadx.plugins.input.java.data.JavaFieldData.setAttributes(JavaAttrStorage) may expose internal representation by storing an externally mutable object into JavaFieldData.attributes  At JavaFieldData.java:[line 59]
M V EI2: new jadx.plugins.input.java.data.attributes.debuginfo.LocalVarsAttr(List) may expose internal representation by storing an externally mutable object into LocalVarsAttr.vars  At LocalVarsAttr.java:[line 14]
M V EI: jadx.plugins.input.java.data.attributes.debuginfo.LocalVarsAttr.getVars() may expose internal representation by returning LocalVarsAttr.vars  At LocalVarsAttr.java:[line 18]
M V EI: jadx.api.plugins.input.data.attributes.types.AnnotationMethodParamsAttr.getParamList() may expose internal representation by returning AnnotationMethodParamsAttr.paramList  At AnnotationMethodParamsAttr.java:[line 33]
SpotBugs ended with exit code 1
M V EI2: new jadx.plugins.input.java.data.code.JavaInsnData(CodeDecodeState) may expose internal representation by storing an externally mutable object into JavaInsnData.state  At JavaInsnData.java:[line 39]
M V EI: jadx.plugins.input.java.data.code.JavaInsnData.getRegsArray() may expose internal representation by returning JavaInsnData.argsReg  At JavaInsnData.java:[line 226]
SpotBugs ended with exit code 1
M V EI2: new jadx.plugins.input.java.data.attributes.debuginfo.LocalVarTypesAttr(List) may expose internal representation by storing an externally mutable object into LocalVarTypesAttr.vars  At LocalVarTypesAttr.java:[line 14]
M V EI: jadx.plugins.input.java.data.attributes.debuginfo.LocalVarTypesAttr.getVars() may expose internal representation by returning LocalVarTypesAttr.vars  At LocalVarTypesAttr.java:[line 18]
M D NP: Possible null pointer dereference in jadx.plugins.input.dex.sections.DexAnnotationsConvert.extractSignature(IAnnotation) due to return value of called method  Dereferenced at DexAnnotationsConvert.java:[line 120]
M D SF: Switch statement found in jadx.plugins.input.dex.sections.DexAnnotationsConvert.convertSystemAnnotations(String, List, IAnnotation) where default case is missing  At DexAnnotationsConvert.java:[lines 56-112]
M V EI2: new jadx.plugins.input.dex.sections.annotations.AnnotationsParser(SectionReader, SectionReader) may expose internal representation by storing an externally mutable object into AnnotationsParser.in  At AnnotationsParser.java:[line 27]
M V EI2: new jadx.plugins.input.dex.sections.annotations.AnnotationsParser(SectionReader, SectionReader) may expose internal representation by storing an externally mutable object into AnnotationsParser.ext  At AnnotationsParser.java:[line 28]
H C NP: Possible null pointer dereference of DexFieldData.annotationsParser in jadx.plugins.input.dex.sections.DexFieldData.getAnnotations()  Checked and found to be null at DexFieldData.java:[line 75]
M V EI2: new jadx.plugins.input.dex.sections.DexFieldData(AnnotationsParser) may expose internal representation by storing an externally mutable object into DexFieldData.annotationsParser  At DexFieldData.java:[line 27]
M V EI2: new jadx.plugins.input.dex.insns.DexInsnData(DexCodeReader, SectionReader) may expose internal representation by storing an externally mutable object into DexInsnData.externalReader  At DexInsnData.java:[line 39]
M V EI2: new jadx.plugins.input.dex.insns.DexInsnData(DexCodeReader, SectionReader) may expose internal representation by storing an externally mutable object into DexInsnData.codeData  At DexInsnData.java:[line 38]
M V EI: jadx.plugins.input.dex.insns.DexInsnData.getCodeData() may expose internal representation by returning DexInsnData.codeData  At DexInsnData.java:[line 221]
M V EI: jadx.plugins.input.dex.insns.DexInsnData.getArgsReg() may expose internal representation by returning DexInsnData.argsReg  At DexInsnData.java:[line 165]
M V EI2: jadx.plugins.input.dex.insns.DexInsnData.setArgsReg(int[]) may expose internal representation by storing an externally mutable object into DexInsnData.argsReg  At DexInsnData.java:[line 169]
M V EI2: new jadx.plugins.input.java.data.JavaMethodData(JavaClassData, JavaMethodRef) may expose internal representation by storing an externally mutable object into JavaMethodData.methodRef  At JavaMethodData.java:[line 30]
M V EI2: jadx.plugins.input.java.data.JavaMethodData.setData(int, JavaAttrStorage) may expose internal representation by storing an externally mutable object into JavaMethodData.attributes  At JavaMethodData.java:[line 35]
M V EI: jadx.plugins.input.java.data.JavaMethodData.getMethodRef() may expose internal representation by returning JavaMethodData.methodRef  At JavaMethodData.java:[line 40]
M D SF: Switch statement found in jadx.plugins.input.dex.sections.DexHeader.readMapList(SectionReader, int) where default case is missing  At DexHeader.java:[lines 63-69]
M D DLS: Dead store to dataSize in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 49]
M D DLS: Dead store to checksum in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 26]
M D DLS: Dead store to linkOff in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 35]
M D DLS: Dead store to signature in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 27]
M D DLS: Dead store to fileSize in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 28]
M D DLS: Dead store to stringIdsSize in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 37]
M D DLS: Dead store to headerSize in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 29]
M D DLS: Dead store to dataOff in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 50]
M D DLS: Dead store to magic in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 23]
M D DLS: Dead store to linkSize in new jadx.plugins.input.dex.sections.DexHeader(SectionReader)  At DexHeader.java:[line 34]
M B CT: Exception thrown in class jadx.plugins.input.dex.sections.DexHeader at new jadx.plugins.input.dex.sections.DexHeader(SectionReader) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At DexHeader.java:[line 32]
H C NP: Possible null pointer dereference of DexMethodData.annotationsParser in jadx.plugins.input.dex.sections.DexMethodData.getAnnotationsParser()  Checked and found to be null at DexMethodData.java:[line 92]
M V EI: jadx.plugins.input.dex.sections.DexMethodData.getMethodRef() may expose internal representation by returning DexMethodData.methodRef  At DexMethodData.java:[line 36]
M V EI2: jadx.plugins.input.dex.sections.DexMethodData.setCodeReader(DexCodeReader) may expose internal representation by storing an externally mutable object into DexMethodData.codeReader  At DexMethodData.java:[line 59]
M V EI: jadx.plugins.input.dex.sections.DexMethodData.getCodeReader() may expose internal representation by returning DexMethodData.codeReader  At DexMethodData.java:[line 55]
M V EI2: new jadx.plugins.input.dex.sections.DexMethodData(AnnotationsParser) may expose internal representation by storing an externally mutable object into DexMethodData.annotationsParser  At DexMethodData.java:[line 31]
M V EI2: jadx.plugins.input.dex.sections.DexMethodData.setMethodRef(DexMethodRef) may expose internal representation by storing an externally mutable object into DexMethodData.methodRef  At DexMethodData.java:[line 40]
M D NP: Possible null pointer dereference in jadx.cli.tools.ConvertArscFile.main(String[]) due to return value of called method  Dereferenced at ConvertArscFile.java:[line 58]
M V EI2: jadx.plugins.input.dex.sections.debuginfo.DebugInfoParser.initMthArgs(int, List) may expose internal representation by storing an externally mutable object into DebugInfoParser.argTypes  At DebugInfoParser.java:[line 70]
M V EI2: new jadx.plugins.input.dex.sections.debuginfo.DebugInfoParser(SectionReader, int, int) may expose internal representation by storing an externally mutable object into DebugInfoParser.in  At DebugInfoParser.java:[line 50]
SpotBugs ended with exit code 1
M V EI2: new jadx.plugins.input.dex.sections.DexCodeReader(SectionReader) may expose internal representation by storing an externally mutable object into DexCodeReader.in  At DexCodeReader.java:[line 31]
M D IM: Check for oddness that won't work for negative numbers in jadx.plugins.input.dex.sections.DexCodeReader.getTriesOffset()  At DexCodeReader.java:[line 131]
M D NP: Possible null pointer dereference in jadx.plugins.input.dex.sections.DexClassData.getType() due to return value of called method  Checked and found to be null at DexClassData.java:[line 45]
M V EI2: new jadx.plugins.input.dex.sections.DexClassData(SectionReader, AnnotationsParser) may expose internal representation by storing an externally mutable object into DexClassData.in  At DexClassData.java:[line 32]
M V EI2: new jadx.plugins.input.dex.sections.DexClassData(SectionReader, AnnotationsParser) may expose internal representation by storing an externally mutable object into DexClassData.annotationsParser  At DexClassData.java:[line 33]
M V EI: jadx.plugins.input.dex.DexReader.getBuf() may expose internal representation by returning DexReader.buf  At DexReader.java:[line 41]
M V EI2: new jadx.plugins.input.dex.DexLoadResult(List, Closeable) may expose internal representation by storing an externally mutable object into DexLoadResult.dexReaders  At DexLoadResult.java:[line 20]
M D REC: Exception is caught when Exception is not thrown in jadx.cli.JCommanderWrapper.getDefaultValue(JadxCLIArgs, Field, StringBuilder)  At JCommanderWrapper.java:[line 160]
M P UrF: Unread field: jadx.plugins.input.dex.sections.debuginfo.DebugInfoParser.sourceFile  At DebugInfoParser.java:[line 161]
M V MS: jadx.plugins.input.dex.sections.DexConsts.DEX_FILE_MAGIC is a mutable array  At DexConsts.java:[line 5]
M V MS: jadx.plugins.input.dex.sections.DexConsts.ZIP_FILE_MAGIC is a mutable array  At DexConsts.java:[line 7]
SpotBugs ended with exit code 1
M V EI: jadx.cli.JadxCLIArgs.getFiles() may expose internal representation by returning JadxCLIArgs.files  At JadxCLIArgs.java:[line 298]
M V EI: jadx.cli.JadxCLIArgs.getPluginOptions() may expose internal representation by returning JadxCLIArgs.pluginOptions  At JadxCLIArgs.java:[line 458]
SpotBugs ended with exit code 1
M V EI2: new jadx.core.utils.ImmutableList(Object[]) may expose internal representation by storing an externally mutable object into ImmutableList.arr  At ImmutableList.java:[line 31]
M V EI: jadx.core.dex.attributes.nodes.TmpEdgeAttr.getBlock() may expose internal representation by returning TmpEdgeAttr.block  At TmpEdgeAttr.java:[line 17]
M V EI2: new jadx.core.dex.attributes.nodes.TmpEdgeAttr(BlockNode) may expose internal representation by storing an externally mutable object into TmpEdgeAttr.block  At TmpEdgeAttr.java:[line 13]
M D NP: Possible null pointer dereference in jadx.api.data.impl.JadxCodeComment.compareTo(ICodeComment) due to return value of called method  Dereferenced at JadxCodeComment.java:[line 66]
M D NP: Possible null pointer dereference in jadx.api.data.impl.JadxCodeComment.compareTo(ICodeComment) due to return value of called method  Method invoked at JadxCodeComment.java:[line 66]
M B Eq: jadx.api.data.impl.JadxCodeComment defines compareTo(Object) and uses Object.equals()  At JadxCodeComment.java:[line 10]
M V EI2: jadx.core.dex.instructions.args.Typed.setType(ArgType) may expose internal representation by storing an externally mutable object into Typed.type  At Typed.java:[line 14]
M V EI: jadx.core.dex.instructions.args.Typed.getType() may expose internal representation by returning Typed.type  At Typed.java:[line 10]
M V EI: jadx.core.utils.CacheStorage.getRootPkgs() may expose internal representation by returning CacheStorage.rootPkgs  At CacheStorage.java:[line 11]
M V EI2: jadx.core.utils.CacheStorage.setRootPkgs(Set) may expose internal representation by storing an externally mutable object into CacheStorage.rootPkgs  At CacheStorage.java:[line 15]
M V EI: jadx.core.dex.visitors.typeinference.TypeInfo.getBounds() may expose internal representation by returning TypeInfo.bounds  At TypeInfo.java:[line 25]
M V EI: jadx.core.dex.visitors.typeinference.TypeInfo.getType() may expose internal representation by returning TypeInfo.type  At TypeInfo.java:[line 17]
M V EI2: jadx.core.dex.visitors.typeinference.TypeInfo.setType(ArgType) may expose internal representation by storing an externally mutable object into TypeInfo.type  At TypeInfo.java:[line 21]
M V EI2: jadx.core.codegen.json.cls.JsonClass.setFields(List) may expose internal representation by storing an externally mutable object into JsonClass.fields  At JsonClass.java:[line 52]
M V EI: jadx.core.codegen.json.cls.JsonClass.getImports() may expose internal representation by returning JsonClass.imports  At JsonClass.java:[line 88]
M V EI: jadx.core.codegen.json.cls.JsonClass.getInterfaces() may expose internal representation by returning JsonClass.interfaces  At JsonClass.java:[line 40]
M V EI2: jadx.core.codegen.json.cls.JsonClass.setInterfaces(List) may expose internal representation by storing an externally mutable object into JsonClass.interfaces  At JsonClass.java:[line 44]
M V EI2: jadx.core.codegen.json.cls.JsonClass.setImports(List) may expose internal representation by storing an externally mutable object into JsonClass.imports  At JsonClass.java:[line 92]
M V EI: jadx.core.codegen.json.cls.JsonClass.getInnerClasses() may expose internal representation by returning JsonClass.innerClasses  At JsonClass.java:[line 64]
M V EI2: jadx.core.codegen.json.cls.JsonClass.setInnerClasses(List) may expose internal representation by storing an externally mutable object into JsonClass.innerClasses  At JsonClass.java:[line 68]
M V EI: jadx.core.codegen.json.cls.JsonClass.getFields() may expose internal representation by returning JsonClass.fields  At JsonClass.java:[line 48]
M V EI2: jadx.core.codegen.json.cls.JsonClass.setMethods(List) may expose internal representation by storing an externally mutable object into JsonClass.methods  At JsonClass.java:[line 60]
M V EI: jadx.core.codegen.json.cls.JsonClass.getMethods() may expose internal representation by returning JsonClass.methods  At JsonClass.java:[line 56]
M V EI: jadx.core.dex.attributes.nodes.MethodReplaceAttr.getReplaceMth() may expose internal representation by returning MethodReplaceAttr.replaceMth  At MethodReplaceAttr.java:[line 19]
M V EI2: new jadx.core.dex.attributes.nodes.MethodReplaceAttr(MethodNode) may expose internal representation by storing an externally mutable object into MethodReplaceAttr.replaceMth  At MethodReplaceAttr.java:[line 15]
M V EI2: new jadx.core.dex.regions.loops.ForLoop(InsnNode, InsnNode) may expose internal representation by storing an externally mutable object into ForLoop.initInsn  At ForLoop.java:[line 11]
M V EI: jadx.core.dex.regions.loops.ForLoop.getInitInsn() may expose internal representation by returning ForLoop.initInsn  At ForLoop.java:[line 16]
M V EI2: new jadx.core.dex.regions.loops.ForLoop(InsnNode, InsnNode) may expose internal representation by storing an externally mutable object into ForLoop.incrInsn  At ForLoop.java:[line 12]
M V EI: jadx.core.dex.regions.loops.ForLoop.getIncrInsn() may expose internal representation by returning ForLoop.incrInsn  At ForLoop.java:[line 20]
M V EI2: new jadx.core.dex.attributes.nodes.MethodBridgeAttr(MethodNode) may expose internal representation by storing an externally mutable object into MethodBridgeAttr.bridgeMth  At MethodBridgeAttr.java:[line 12]
M V EI: jadx.core.dex.attributes.nodes.MethodBridgeAttr.getBridgeMth() may expose internal representation by returning MethodBridgeAttr.bridgeMth  At MethodBridgeAttr.java:[line 16]
M V EI: jadx.core.dex.attributes.nodes.SpecialEdgeAttr.getEnd() may expose internal representation by returning SpecialEdgeAttr.end  At SpecialEdgeAttr.java:[line 34]
M V EI: jadx.core.dex.attributes.nodes.SpecialEdgeAttr.getStart() may expose internal representation by returning SpecialEdgeAttr.start  At SpecialEdgeAttr.java:[line 30]
M V EI2: new jadx.core.dex.attributes.nodes.SpecialEdgeAttr(SpecialEdgeAttr$SpecialEdgeType, BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into SpecialEdgeAttr.start  At SpecialEdgeAttr.java:[line 21]
M V EI2: new jadx.core.dex.attributes.nodes.SpecialEdgeAttr(SpecialEdgeAttr$SpecialEdgeType, BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into SpecialEdgeAttr.end  At SpecialEdgeAttr.java:[line 22]
M V EI2: new jadx.core.dex.attributes.nodes.RegDebugInfoAttr(ArgType, String) may expose internal representation by storing an externally mutable object into RegDebugInfoAttr.type  At RegDebugInfoAttr.java:[line 15]
M V EI: jadx.core.dex.attributes.nodes.RegDebugInfoAttr.getRegType() may expose internal representation by returning RegDebugInfoAttr.type  At RegDebugInfoAttr.java:[line 24]
M V EI: jadx.core.codegen.json.cls.JsonMethod.getLines() may expose internal representation by returning JsonMethod.lines  At JsonMethod.java:[line 37]
M V EI2: jadx.core.codegen.json.cls.JsonMethod.setArguments(List) may expose internal representation by storing an externally mutable object into JsonMethod.arguments  At JsonMethod.java:[line 33]
M V EI2: jadx.core.codegen.json.cls.JsonMethod.setLines(List) may expose internal representation by storing an externally mutable object into JsonMethod.lines  At JsonMethod.java:[line 41]
M V EI: jadx.core.codegen.json.cls.JsonMethod.getArguments() may expose internal representation by returning JsonMethod.arguments  At JsonMethod.java:[line 29]
M V EI: jadx.api.JavaPackage.getClasses() may expose internal representation by returning JavaPackage.classes  At JavaPackage.java:[line 31]
M V EI: jadx.core.dex.visitors.typeinference.TypeBoundConst.getType() may expose internal representation by returning TypeBoundConst.type  At TypeBoundConst.java:[line 30]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundConst(BoundEnum, ArgType, RegisterArg) may expose internal representation by storing an externally mutable object into TypeBoundConst.type  At TypeBoundConst.java:[line 19]
M V EI: jadx.core.dex.visitors.typeinference.TypeBoundConst.getArg() may expose internal representation by returning TypeBoundConst.arg  At TypeBoundConst.java:[line 35]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundConst(BoundEnum, ArgType, RegisterArg) may expose internal representation by storing an externally mutable object into TypeBoundConst.arg  At TypeBoundConst.java:[line 20]
M V EI2: new jadx.core.dex.attributes.nodes.AnonymousClassAttr(ClassNode, ArgType) may expose internal representation by storing an externally mutable object into AnonymousClassAttr.baseType  At AnonymousClassAttr.java:[line 15]
M V EI2: new jadx.core.dex.attributes.nodes.AnonymousClassAttr(ClassNode, ArgType) may expose internal representation by storing an externally mutable object into AnonymousClassAttr.outerCls  At AnonymousClassAttr.java:[line 14]
M V EI: jadx.core.dex.attributes.nodes.AnonymousClassAttr.getOuterCls() may expose internal representation by returning AnonymousClassAttr.outerCls  At AnonymousClassAttr.java:[line 19]
M V EI: jadx.core.dex.attributes.nodes.AnonymousClassAttr.getBaseType() may expose internal representation by returning AnonymousClassAttr.baseType  At AnonymousClassAttr.java:[line 23]
M V EI2: new jadx.core.dex.attributes.nodes.InlinedAttr(ClassNode) may expose internal representation by storing an externally mutable object into InlinedAttr.inlineCls  At InlinedAttr.java:[line 13]
M V EI: jadx.core.dex.attributes.nodes.InlinedAttr.getInlineCls() may expose internal representation by returning InlinedAttr.inlineCls  At InlinedAttr.java:[line 17]
M V EI: jadx.core.deobf.PackageNode.getParentPackage() may expose internal representation by returning PackageNode.parentPackage  At PackageNode.java:[line 95]
M V EI2: new jadx.core.deobf.PackageNode(String) may expose internal representation by storing an externally mutable object into PackageNode.parentPackage  At PackageNode.java:[line 24]
M V EI: jadx.core.deobf.PackageNode.getInnerPackages() may expose internal representation by returning PackageNode.innerPackages  At PackageNode.java:[line 99]
M V EI2: jadx.core.codegen.json.mapping.JsonMapping.setClasses(List) may expose internal representation by storing an externally mutable object into JsonMapping.classes  At JsonMapping.java:[line 13]
M V EI: jadx.core.codegen.json.mapping.JsonMapping.getClasses() may expose internal representation by returning JsonMapping.classes  At JsonMapping.java:[line 9]
M V EI: jadx.core.dex.regions.AbstractRegion.getParent() may expose internal representation by returning AbstractRegion.parent  At AbstractRegion.java:[line 21]
M V EI2: new jadx.core.dex.regions.AbstractRegion(IRegion) may expose internal representation by storing an externally mutable object into AbstractRegion.parent  At AbstractRegion.java:[line 16]
M V EI2: jadx.core.dex.regions.AbstractRegion.setParent(IRegion) may expose internal representation by storing an externally mutable object into AbstractRegion.parent  At AbstractRegion.java:[line 26]
M V EI: jadx.core.dex.attributes.FieldInitInsnAttr.getInsnMth() may expose internal representation by returning FieldInitInsnAttr.mth  At FieldInitInsnAttr.java:[line 25]
M V EI2: new jadx.core.dex.attributes.FieldInitInsnAttr(MethodNode, InsnNode) may expose internal representation by storing an externally mutable object into FieldInitInsnAttr.mth  At FieldInitInsnAttr.java:[line 16]
M V EI2: new jadx.core.dex.attributes.FieldInitInsnAttr(MethodNode, InsnNode) may expose internal representation by storing an externally mutable object into FieldInitInsnAttr.insn  At FieldInitInsnAttr.java:[line 17]
M V EI: jadx.core.dex.attributes.FieldInitInsnAttr.getInsn() may expose internal representation by returning FieldInitInsnAttr.insn  At FieldInitInsnAttr.java:[line 21]
M V EI2: new jadx.core.dex.regions.SwitchRegion$CaseInfo(List, IContainer) may expose internal representation by storing an externally mutable object into SwitchRegion$CaseInfo.keys  At SwitchRegion.java:[line 35]
M V EI: jadx.core.dex.regions.SwitchRegion$CaseInfo.getKeys() may expose internal representation by returning SwitchRegion$CaseInfo.keys  At SwitchRegion.java:[line 40]
M V EI2: jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField.setCls(ClassNode) may expose internal representation by storing an externally mutable object into EnumClassAttr$EnumField.cls  At EnumClassAttr.java:[line 37]
M V EI2: new jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField(FieldNode, ConstructorInsn) may expose internal representation by storing an externally mutable object into EnumClassAttr$EnumField.field  At EnumClassAttr.java:[line 20]
M V EI: jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField.getField() may expose internal representation by returning EnumClassAttr$EnumField.field  At EnumClassAttr.java:[line 25]
M V EI2: new jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField(FieldNode, ConstructorInsn) may expose internal representation by storing an externally mutable object into EnumClassAttr$EnumField.constrInsn  At EnumClassAttr.java:[line 21]
M V EI: jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField.getCls() may expose internal representation by returning EnumClassAttr$EnumField.cls  At EnumClassAttr.java:[line 33]
M V EI: jadx.core.dex.attributes.nodes.EnumClassAttr$EnumField.getConstrInsn() may expose internal representation by returning EnumClassAttr$EnumField.constrInsn  At EnumClassAttr.java:[line 29]
M V MS: Public static jadx.core.xmlgen.XmlSecurity.getSecureDbf() may expose internal representation by returning XmlSecurity.secureDbf  At XmlSecurity.java:[line 26]
M V EI2: new jadx.api.metadata.annotations.NodeDeclareRef(ICodeNodeRef) may expose internal representation by storing an externally mutable object into NodeDeclareRef.node  At NodeDeclareRef.java:[line 15]
M V EI: jadx.api.metadata.annotations.NodeDeclareRef.getNode() may expose internal representation by returning NodeDeclareRef.node  At NodeDeclareRef.java:[line 19]
M D NP: Possible null pointer dereference in jadx.core.utils.files.FileUtils.getPathBaseName(Path) due to return value of called method  Dereferenced at FileUtils.java:[line 321]
M D NP: Possible null pointer dereference in jadx.core.utils.files.FileUtils.makeDirsForFile(Path) due to return value of called method  Dereferenced at FileUtils.java:[line 82]
M V EI2: jadx.core.xmlgen.entry.ProtoValue.setNamedValues(List) may expose internal representation by storing an externally mutable object into ProtoValue.namedValues  At ProtoValue.java:[line 51]
M V EI: jadx.core.xmlgen.entry.ProtoValue.getNamedValues() may expose internal representation by returning ProtoValue.namedValues  At ProtoValue.java:[line 56]
M V EI: jadx.core.dex.nodes.InsnContainer.getInstructions() may expose internal representation by returning InsnContainer.insns  At InsnContainer.java:[line 26]
M V EI2: new jadx.core.dex.nodes.InsnContainer(List) may expose internal representation by storing an externally mutable object into InsnContainer.insns  At InsnContainer.java:[line 21]
M D NP: Possible null pointer dereference in jadx.api.data.impl.JadxCodeRename.compareTo(ICodeRename) due to return value of called method  Dereferenced at JadxCodeRename.java:[line 66]
M D NP: Possible null pointer dereference in jadx.api.data.impl.JadxCodeRename.compareTo(ICodeRename) due to return value of called method  Method invoked at JadxCodeRename.java:[line 66]
M V EI: jadx.core.dex.attributes.nodes.EnumClassAttr.getFields() may expose internal representation by returning EnumClassAttr.fields  At EnumClassAttr.java:[line 54]
M V EI2: new jadx.core.dex.attributes.nodes.EnumClassAttr(List) may expose internal representation by storing an externally mutable object into EnumClassAttr.fields  At EnumClassAttr.java:[line 50]
M V EI: jadx.core.dex.attributes.nodes.EnumClassAttr.getStaticMethod() may expose internal representation by returning EnumClassAttr.staticMethod  At EnumClassAttr.java:[line 58]
M V EI2: jadx.core.dex.attributes.nodes.EnumClassAttr.setStaticMethod(MethodNode) may expose internal representation by storing an externally mutable object into EnumClassAttr.staticMethod  At EnumClassAttr.java:[line 62]
M B RR: jadx.core.utils.android.ExtDataInput.skipInt() ignores result of jadx.core.utils.android.ExtDataInput.skipBytes(int)  At ExtDataInput.java:[line 45]
M B RR: jadx.core.utils.android.ExtDataInput.readNullEndedString(int, boolean) ignores result of jadx.core.utils.android.ExtDataInput.skipBytes(int)  At ExtDataInput.java:[line 105]
M V EI: jadx.core.dex.instructions.args.PrimitiveType.getBoxType() may expose internal representation by returning PrimitiveType.boxType  At PrimitiveType.java:[line 35]
M V EI: jadx.core.xmlgen.entry.ResourceEntry.getNamedValues() may expose internal representation by returning ResourceEntry.namedValues  At ResourceEntry.java:[line 88]
M V EI2: jadx.core.xmlgen.entry.ResourceEntry.setNamedValues(List) may expose internal representation by storing an externally mutable object into ResourceEntry.namedValues  At ResourceEntry.java:[line 84]
M V EI2: new jadx.core.dex.attributes.nodes.LoopLabelAttr(LoopInfo) may expose internal representation by storing an externally mutable object into LoopLabelAttr.loop  At LoopLabelAttr.java:[line 11]
M V EI: jadx.core.dex.attributes.nodes.LoopLabelAttr.getLoop() may expose internal representation by returning LoopLabelAttr.loop  At LoopLabelAttr.java:[line 15]
M V EI: jadx.core.dex.attributes.nodes.MethodOverrideAttr.getBaseMethods() may expose internal representation by returning MethodOverrideAttr.baseMethods  At MethodOverrideAttr.java:[line 41]
M V EI: jadx.core.dex.attributes.nodes.MethodOverrideAttr.getOverrideList() may expose internal representation by returning MethodOverrideAttr.overrideList  At MethodOverrideAttr.java:[line 33]
M V EI2: new jadx.core.dex.attributes.nodes.MethodOverrideAttr(List, SortedSet, Set) may expose internal representation by storing an externally mutable object into MethodOverrideAttr.overrideList  At MethodOverrideAttr.java:[line 27]
M V EI2: new jadx.core.dex.attributes.nodes.MethodOverrideAttr(List, SortedSet, Set) may expose internal representation by storing an externally mutable object into MethodOverrideAttr.baseMethods  At MethodOverrideAttr.java:[line 29]
M V EI2: new jadx.api.impl.DelegateCodeCache(ICodeCache) may expose internal representation by storing an externally mutable object into DelegateCodeCache.backCache  At DelegateCodeCache.java:[line 16]
M V EI: jadx.core.dex.attributes.nodes.GenericInfoAttr.getGenericTypes() may expose internal representation by returning GenericInfoAttr.genericTypes  At GenericInfoAttr.java:[line 18]
M V EI2: new jadx.core.dex.attributes.nodes.GenericInfoAttr(List) may expose internal representation by storing an externally mutable object into GenericInfoAttr.genericTypes  At GenericInfoAttr.java:[line 14]
M V EI: jadx.core.dex.visitors.typeinference.TypeUpdateEntry.getArg() may expose internal representation by returning TypeUpdateEntry.arg  At TypeUpdateEntry.java:[line 16]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeUpdateEntry(InsnArg, ArgType) may expose internal representation by storing an externally mutable object into TypeUpdateEntry.arg  At TypeUpdateEntry.java:[line 11]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeUpdateEntry(InsnArg, ArgType) may expose internal representation by storing an externally mutable object into TypeUpdateEntry.type  At TypeUpdateEntry.java:[line 12]
M V EI: jadx.core.dex.visitors.typeinference.TypeUpdateEntry.getType() may expose internal representation by returning TypeUpdateEntry.type  At TypeUpdateEntry.java:[line 20]
M V EI: jadx.core.xmlgen.ResourceStorage.getResources() may expose internal representation by returning ResourceStorage.list  At ResourceStorage.java:[line 67]
M D SF: Switch statement found in jadx.core.xmlgen.entry.EntryConfig.generateQualifiers() where default case is missing  At EntryConfig.java:[lines 176-181]
H I Dm: Found reliance on default encoding in jadx.core.deobf.TldHelper.loadTldFile(): new java.io.InputStreamReader(InputStream)  At TldHelper.java:[line 20]
M V EI2: jadx.core.codegen.json.mapping.JsonClsMapping.setFields(List) may expose internal representation by storing an externally mutable object into JsonClsMapping.fields  At JsonClsMapping.java:[line 61]
M V EI: jadx.core.codegen.json.mapping.JsonClsMapping.getMethods() may expose internal representation by returning JsonClsMapping.methods  At JsonClsMapping.java:[line 65]
M V EI: jadx.core.codegen.json.mapping.JsonClsMapping.getFields() may expose internal representation by returning JsonClsMapping.fields  At JsonClsMapping.java:[line 57]
M V EI2: jadx.core.codegen.json.mapping.JsonClsMapping.setMethods(List) may expose internal representation by storing an externally mutable object into JsonClsMapping.methods  At JsonClsMapping.java:[line 69]
M V EI: jadx.api.data.impl.JadxCodeData.getRenames() may expose internal representation by returning JadxCodeData.renames  At JadxCodeData.java:[line 25]
M V EI2: jadx.api.data.impl.JadxCodeData.setComments(List) may expose internal representation by storing an externally mutable object into JadxCodeData.comments  At JadxCodeData.java:[line 20]
M V EI: jadx.api.data.impl.JadxCodeData.getComments() may expose internal representation by returning JadxCodeData.comments  At JadxCodeData.java:[line 16]
M V EI2: jadx.api.data.impl.JadxCodeData.setRenames(List) may expose internal representation by storing an externally mutable object into JadxCodeData.renames  At JadxCodeData.java:[line 29]
M V EI: jadx.gui.device.debugger.smali.SmaliWriter.getClassNode() may expose internal representation by returning SmaliWriter.cls  At SmaliWriter.java:[line 18]
M V EI2: new jadx.gui.device.debugger.smali.SmaliWriter(ClassNode) may expose internal representation by storing an externally mutable object into SmaliWriter.cls  At SmaliWriter.java:[line 14]
M V EI: jadx.core.dex.instructions.args.CodeVar.getCachedVarNode() may expose internal representation by returning CodeVar.cachedVarNode  At CodeVar.java:[line 98]
M V EI2: jadx.core.dex.instructions.args.CodeVar.setSsaVars(List) may expose internal representation by storing an externally mutable object into CodeVar.ssaVars  At CodeVar.java:[line 63]
M V EI: jadx.core.dex.instructions.args.CodeVar.getSsaVars() may expose internal representation by returning CodeVar.ssaVars  At CodeVar.java:[line 50]
M V EI2: jadx.core.dex.instructions.args.CodeVar.setType(ArgType) may expose internal representation by storing an externally mutable object into CodeVar.type  At CodeVar.java:[line 46]
M V EI: jadx.core.dex.instructions.args.CodeVar.getType() may expose internal representation by returning CodeVar.type  At CodeVar.java:[line 42]
M V EI2: jadx.core.dex.instructions.args.CodeVar.setCachedVarNode(VarNode) may expose internal representation by storing an externally mutable object into CodeVar.cachedVarNode  At CodeVar.java:[line 102]
M V EI2: new jadx.gui.utils.codecache.disk.adapters.MethodNodeAdapter(RootNode) may expose internal representation by storing an externally mutable object into MethodNodeAdapter.root  At MethodNodeAdapter.java:[line 16]
M B RR: jadx.core.utils.android.Res9patchStreamDecoder$NinePatch.decode(ExtDataInput) ignores result of jadx.core.utils.android.ExtDataInput.skipBytes(int)  At Res9patchStreamDecoder.java:[line 128]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatInfo(LogcatController, short, short, int, int, int, int, byte) may expose internal representation by storing an externally mutable object into LogcatController$LogcatInfo.this$0  At LogcatController.java:[line 266]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatInfo(LogcatController, short, short, int, int, int, int, int, int, byte) may expose internal representation by storing an externally mutable object into LogcatController$LogcatInfo.this$0  At LogcatController.java:[line 290]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatInfo(LogcatController, short, short, int, int, int, int, int, byte) may expose internal representation by storing an externally mutable object into LogcatController$LogcatInfo.this$0  At LogcatController.java:[line 278]
H I Dm: Found reliance on default encoding in jadx.gui.device.debugger.LogcatController$LogcatInfo.setMsg(byte[]): new String(byte[])  At LogcatController.java:[line 304]
M V EI2: new jadx.core.dex.instructions.args.NamedArg(String, ArgType) may expose internal representation by storing an externally mutable object into NamedArg.type  At NamedArg.java:[line 12]
M B RR: jadx.core.utils.android.Res9patchStreamDecoder.find9patchChunk(DataInput) ignores result of java.io.DataInput.skipBytes(int)  At Res9patchStreamDecoder.java:[line 79]
M V EI2: jadx.gui.settings.data.TabViewState.setView(ViewPoint) may expose internal representation by storing an externally mutable object into TabViewState.view  At TabViewState.java:[line 47]
M V EI: jadx.gui.settings.data.TabViewState.getView() may expose internal representation by returning TabViewState.view  At TabViewState.java:[line 43]
M V EI2: new jadx.gui.ui.MainDropTarget(MainWindow) may expose internal representation by storing an externally mutable object into MainDropTarget.mainWindow  At MainDropTarget.java:[line 29]
H I Dm: Found reliance on default encoding in jadx.core.utils.Utils.appendStackTrace(ICodeWriter, Throwable): new java.io.PrintWriter(OutputStream, boolean)  At Utils.java:[line 154]
M V EI: jadx.core.dex.attributes.nodes.MethodTypeVarsAttr.getTypeVars() may expose internal representation by returning MethodTypeVarsAttr.typeVars  At MethodTypeVarsAttr.java:[line 32]
M V EI2: new jadx.gui.utils.codecache.disk.adapters.ClassNodeAdapter(RootNode) may expose internal representation by storing an externally mutable object into ClassNodeAdapter.root  At ClassNodeAdapter.java:[line 14]
M V EI2: jadx.gui.search.SearchSettings.setActiveCls(JClass) may expose internal representation by storing an externally mutable object into SearchSettings.activeCls  At SearchSettings.java:[line 64]
M V EI: jadx.gui.search.SearchSettings.getActiveCls() may expose internal representation by returning SearchSettings.activeCls  At SearchSettings.java:[line 60]
M V EI: jadx.gui.update.data.Release.getAssets() may expose internal representation by returning Release.assets  At Release.java:[line 27]
M V EI2: jadx.gui.update.data.Release.setAssets(List) may expose internal representation by storing an externally mutable object into Release.assets  At Release.java:[line 31]
M V EI2: new jadx.gui.search.SearchJob(SearchTask, ISearchProvider) may expose internal representation by storing an externally mutable object into SearchJob.searchTask  At SearchJob.java:[line 15]
M V EI: jadx.gui.jobs.SimpleTask.scheduleJobs() may expose internal representation by returning SimpleTask.jobs  At SimpleTask.java:[line 33]
M V EI2: new jadx.gui.jobs.SimpleTask(String, List, Consumer) may expose internal representation by storing an externally mutable object into SimpleTask.jobs  At SimpleTask.java:[line 22]
M V EI2: jadx.api.JadxArgs.setCodeCache(ICodeCache) may expose internal representation by storing an externally mutable object into JadxArgs.codeCache  At JadxArgs.java:[line 487]
M V EI2: jadx.api.JadxArgs.setPluginOptions(Map) may expose internal representation by storing an externally mutable object into JadxArgs.pluginOptions  At JadxArgs.java:[line 543]
M V EI2: jadx.api.JadxArgs.setRenameFlags(Set) may expose internal representation by storing an externally mutable object into JadxArgs.renameFlags  At JadxArgs.java:[line 455]
M V EI: jadx.api.JadxArgs.getInputFiles() may expose internal representation by returning JadxArgs.inputFiles  At JadxArgs.java:[line 145]
M V EI: jadx.api.JadxArgs.getCodeCache() may expose internal representation by returning JadxArgs.codeCache  At JadxArgs.java:[line 483]
M V EI2: jadx.api.JadxArgs.setInputFiles(List) may expose internal representation by storing an externally mutable object into JadxArgs.inputFiles  At JadxArgs.java:[line 153]
M V EI: jadx.api.JadxArgs.getRenameFlags() may expose internal representation by returning JadxArgs.renameFlags  At JadxArgs.java:[line 459]
M V EI: jadx.api.JadxArgs.getPluginOptions() may expose internal representation by returning JadxArgs.pluginOptions  At JadxArgs.java:[line 539]
M V EI2: new jadx.gui.ui.codearea.EditorViewState(JNode, String, int, Point) may expose internal representation by storing an externally mutable object into EditorViewState.node  At EditorViewState.java:[line 16]
M V EI: jadx.gui.ui.codearea.EditorViewState.getNode() may expose internal representation by returning EditorViewState.node  At EditorViewState.java:[line 23]
M V EI: jadx.gui.ui.codearea.EditorViewState.getViewPoint() may expose internal representation by returning EditorViewState.viewPoint  At EditorViewState.java:[line 31]
M V EI2: new jadx.gui.ui.codearea.EditorViewState(JNode, String, int, Point) may expose internal representation by storing an externally mutable object into EditorViewState.viewPoint  At EditorViewState.java:[line 19]
H I Dm: Found reliance on default encoding in jadx.core.export.TemplateFile.build(): java.io.ByteArrayOutputStream.toString()  At TemplateFile.java:[line 59]
H I Dm: Found reliance on default encoding in jadx.core.export.TemplateFile.process(OutputStream): String.getBytes()  At TemplateFile.java:[line 82]
M V EI2: new jadx.core.xmlgen.entry.ValuesParser(String[], Map) may expose internal representation by storing an externally mutable object into ValuesParser.resMap  At ValuesParser.java:[line 27]
M V EI2: new jadx.core.xmlgen.entry.ValuesParser(String[], Map) may expose internal representation by storing an externally mutable object into ValuesParser.strings  At ValuesParser.java:[line 26]
M V MS: Public static jadx.core.xmlgen.entry.ValuesParser.getAndroidResMap() may expose internal representation by returning ValuesParser.androidResMap  At ValuesParser.java:[line 35]
M V EI: jadx.core.dex.attributes.nodes.JadxCommentsAttr.getComments() may expose internal representation by returning JadxCommentsAttr.comments  At JadxCommentsAttr.java:[line 41]
M V EI: jadx.api.ResourceType.getExts() may expose internal representation by returning ResourceType.exts  At ResourceType.java:[line 27]
M V EI: jadx.core.dex.attributes.nodes.DeclareVariablesAttr.getVars() may expose internal representation by returning DeclareVariablesAttr.vars  At DeclareVariablesAttr.java:[line 19]
M V EI: jadx.api.metadata.impl.CodeMetadataStorage.getLineMapping() may expose internal representation by returning CodeMetadataStorage.lines  At CodeMetadataStorage.java:[line 143]
M D SF: Switch statement found in jadx.api.metadata.impl.CodeMetadataStorage.getNodeAt(int) where default case is missing  At CodeMetadataStorage.java:[lines 102-114]
M V EI2: new jadx.gui.utils.codecache.disk.adapters.NodeDeclareRefAdapter(CodeAnnotationAdapter) may expose internal representation by storing an externally mutable object into NodeDeclareRefAdapter.refAdapter  At NodeDeclareRefAdapter.java:[line 14]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getMth() may expose internal representation by returning FinallyExtractInfo.mth  At FinallyExtractInfo.java:[line 35]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getCurDupSlice() may expose internal representation by returning FinallyExtractInfo.curDupSlice  At FinallyExtractInfo.java:[line 63]
M V EI2: jadx.core.dex.visitors.finaly.FinallyExtractInfo.setCurDupInsns(List, int) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.curDupInsns  At FinallyExtractInfo.java:[line 79]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getStartBlock() may expose internal representation by returning FinallyExtractInfo.startBlock  At FinallyExtractInfo.java:[line 59]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getCheckedBlocks() may expose internal representation by returning FinallyExtractInfo.checkedBlocks  At FinallyExtractInfo.java:[line 55]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getFinallyHandler() may expose internal representation by returning FinallyExtractInfo.finallyHandler  At FinallyExtractInfo.java:[line 39]
M V EI2: new jadx.core.dex.visitors.finaly.FinallyExtractInfo(MethodNode, ExceptionHandler, BlockNode, List) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.finallyHandler  At FinallyExtractInfo.java:[line 29]
M V EI2: new jadx.core.dex.visitors.finaly.FinallyExtractInfo(MethodNode, ExceptionHandler, BlockNode, List) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.mth  At FinallyExtractInfo.java:[line 28]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getDuplicateSlices() may expose internal representation by returning FinallyExtractInfo.duplicateSlices  At FinallyExtractInfo.java:[line 51]
M V EI2: new jadx.core.dex.visitors.finaly.FinallyExtractInfo(MethodNode, ExceptionHandler, BlockNode, List) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.startBlock  At FinallyExtractInfo.java:[line 30]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getAllHandlerBlocks() may expose internal representation by returning FinallyExtractInfo.allHandlerBlocks  At FinallyExtractInfo.java:[line 43]
M V EI2: new jadx.core.dex.visitors.finaly.FinallyExtractInfo(MethodNode, ExceptionHandler, BlockNode, List) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.allHandlerBlocks  At FinallyExtractInfo.java:[line 31]
M V EI2: jadx.core.dex.visitors.finaly.FinallyExtractInfo.setCurDupSlice(InsnsSlice) may expose internal representation by storing an externally mutable object into FinallyExtractInfo.curDupSlice  At FinallyExtractInfo.java:[line 67]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getFinallyInsnsSlice() may expose internal representation by returning FinallyExtractInfo.finallyInsnsSlice  At FinallyExtractInfo.java:[line 47]
M V EI: jadx.core.dex.visitors.finaly.FinallyExtractInfo.getCurDupInsns() may expose internal representation by returning FinallyExtractInfo.curDupInsns  At FinallyExtractInfo.java:[line 71]
M D SF: Switch statement found in jadx.gui.ui.dialog.CommentDialog$1.keyPressed(KeyEvent) where default case is missing  At CommentDialog.java:[lines 159-169]
M C NP: Possible null pointer dereference of ClassInfo.parentClass in jadx.core.dex.info.ClassInfo.getAliasPkg()  Dereferenced at ClassInfo.java:[line 90]
M V EI: jadx.core.dex.info.ClassInfo.getType() may expose internal representation by returning ClassInfo.type  At ClassInfo.java:[line 263]
M V EI: jadx.core.dex.info.ClassInfo.getParentClass() may expose internal representation by returning ClassInfo.parentClass  At ClassInfo.java:[line 233]
M V EI: jadx.api.impl.SimpleCodeWriter.getRawBuf() may expose internal representation by returning SimpleCodeWriter.buf  At SimpleCodeWriter.java:[line 242]
M V EI: jadx.core.dex.attributes.AttrList.getList() may expose internal representation by returning AttrList.list  At AttrList.java:[line 20]
M V EI: jadx.core.dex.regions.Region.getSubBlocks() may expose internal representation by returning Region.blocks  At Region.java:[line 24]
H C SA: Self assignment of field SmaliTokenMaker.zzMarkedPos in jadx.gui.ui.codearea.SmaliTokenMaker.yylex()  At SmaliTokenMaker.java:[line 1477]
M V EI2: jadx.gui.ui.codearea.SmaliTokenMaker.getTokenList(Segment, int, int) may expose internal representation by storing an externally mutable object into SmaliTokenMaker.s  At SmaliTokenMaker.java:[line 1255]
M V EI: jadx.gui.ui.codearea.SmaliTokenMaker.yylex() may expose internal representation by returning org.fife.ui.rsyntaxtextarea.TokenMakerBase.firstToken  At SmaliTokenMaker.java:[line 1513]
M V EI: jadx.core.dex.attributes.nodes.LocalVarsDebugInfoAttr.getLocalVars() may expose internal representation by returning LocalVarsDebugInfoAttr.localVars  At LocalVarsDebugInfoAttr.java:[line 19]
M V EI2: new jadx.core.dex.attributes.nodes.LocalVarsDebugInfoAttr(List) may expose internal representation by storing an externally mutable object into LocalVarsDebugInfoAttr.localVars  At LocalVarsDebugInfoAttr.java:[line 15]
M D DLS: Dead store to offset in jadx.gui.ui.codearea.SmaliTokenMaker.zzUnpackAction()  At SmaliTokenMaker.java:[line 84]
M D DLS: Dead store to offset in jadx.gui.ui.codearea.SmaliTokenMaker.zzUnpackRowMap()  At SmaliTokenMaker.java:[line 200]
M D DLS: Dead store to offset in jadx.gui.ui.codearea.SmaliTokenMaker.zzUnpackTrans()  At SmaliTokenMaker.java:[line 1032]
M D DLS: Dead store to offset in jadx.gui.ui.codearea.SmaliTokenMaker.zzUnpackAttribute()  At SmaliTokenMaker.java:[line 1094]
M V EI: jadx.core.dex.nodes.BlockNode.getInstructions() may expose internal representation by returning BlockNode.instructions  At BlockNode.java:[line 143]
M V EI: jadx.core.dex.nodes.BlockNode.getCleanSuccessors() may expose internal representation by returning BlockNode.cleanSuccessors  At BlockNode.java:[line 91]
M V EI2: jadx.core.dex.nodes.BlockNode.setDomFrontier(BitSet) may expose internal representation by storing an externally mutable object into BlockNode.domFrontier  At BlockNode.java:[line 173]
M V EI: jadx.core.dex.nodes.BlockNode.getDominatesOn() may expose internal representation by returning BlockNode.dominatesOn  At BlockNode.java:[line 188]
M V EI: jadx.core.dex.nodes.BlockNode.getPredecessors() may expose internal representation by returning BlockNode.predecessors  At BlockNode.java:[line 83]
M V EI2: jadx.core.dex.nodes.BlockNode.setIDom(BlockNode) may expose internal representation by storing an externally mutable object into BlockNode.idom  At BlockNode.java:[line 184]
M V EI: jadx.core.dex.nodes.BlockNode.getIDom() may expose internal representation by returning BlockNode.idom  At BlockNode.java:[line 180]
M V EI: jadx.core.dex.nodes.BlockNode.getDomFrontier() may expose internal representation by returning BlockNode.domFrontier  At BlockNode.java:[line 169]
M V EI: jadx.core.dex.nodes.BlockNode.getDoms() may expose internal representation by returning BlockNode.doms  At BlockNode.java:[line 161]
M V EI2: jadx.core.dex.nodes.BlockNode.setDoms(BitSet) may expose internal representation by storing an externally mutable object into BlockNode.doms  At BlockNode.java:[line 165]
M V EI: jadx.core.dex.nodes.BlockNode.getSuccessors() may expose internal representation by returning BlockNode.successors  At BlockNode.java:[line 87]
H I Dm: Found reliance on default encoding in new jadx.gui.ui.codearea.SmaliTokenMaker(InputStream): new java.io.InputStreamReader(InputStream)  At SmaliTokenMaker.java:[line 1323]
M V EI: jadx.core.dex.trycatch.CatchAttr.getHandlers() may expose internal representation by returning CatchAttr.handlers  At CatchAttr.java:[line 24]
M V EI: jadx.core.xmlgen.ResContainer.getSubFiles() may expose internal representation by returning ResContainer.subFiles  At ResContainer.java:[line 56]
M V EI: jadx.core.dex.attributes.nodes.JadxError.getCause() may expose internal representation by returning JadxError.cause  At JadxError.java:[line 25]
M V EI2: new jadx.core.dex.attributes.nodes.JadxError(String, Throwable) may expose internal representation by storing an externally mutable object into JadxError.cause  At JadxError.java:[line 17]
M V EI2: new jadx.core.xmlgen.ResXmlGen(ResourceStorage, ValuesParser) may expose internal representation by storing an externally mutable object into ResXmlGen.resStorage  At ResXmlGen.java:[line 47]
M V EI2: new jadx.core.dex.nodes.Edge(BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into Edge.target  At Edge.java:[line 9]
M V EI: jadx.core.dex.nodes.Edge.getSource() may expose internal representation by returning Edge.source  At Edge.java:[line 13]
M V EI2: new jadx.core.dex.nodes.Edge(BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into Edge.source  At Edge.java:[line 8]
M V EI: jadx.core.dex.nodes.Edge.getTarget() may expose internal representation by returning Edge.target  At Edge.java:[line 17]
M V EI: jadx.gui.device.debugger.RegisterObserver$Info.getInfo() may expose internal representation by returning RegisterObserver$Info.info  At RegisterObserver.java:[line 123]
M V EI2: new jadx.core.utils.InsnList(List) may expose internal representation by storing an externally mutable object into InsnList.list  At InsnList.java:[line 14]
M V EI: jadx.core.dex.attributes.nodes.LoopInfo.getParentLoop() may expose internal representation by returning LoopInfo.parentLoop  At LoopInfo.java:[line 87]
M V EI2: new jadx.core.dex.attributes.nodes.LoopInfo(BlockNode, BlockNode, Set) may expose internal representation by storing an externally mutable object into LoopInfo.start  At LoopInfo.java:[line 23]
M V EI2: new jadx.core.dex.attributes.nodes.LoopInfo(BlockNode, BlockNode, Set) may expose internal representation by storing an externally mutable object into LoopInfo.end  At LoopInfo.java:[line 24]
M V EI: jadx.core.dex.attributes.nodes.LoopInfo.getLoopBlocks() may expose internal representation by returning LoopInfo.loopBlocks  At LoopInfo.java:[line 37]
M V EI: jadx.core.dex.attributes.nodes.LoopInfo.getEnd() may expose internal representation by returning LoopInfo.end  At LoopInfo.java:[line 33]
M V EI2: new jadx.core.dex.attributes.nodes.LoopInfo(BlockNode, BlockNode, Set) may expose internal representation by storing an externally mutable object into LoopInfo.loopBlocks  At LoopInfo.java:[line 25]
M V EI2: jadx.core.dex.attributes.nodes.LoopInfo.setParentLoop(LoopInfo) may expose internal representation by storing an externally mutable object into LoopInfo.parentLoop  At LoopInfo.java:[line 91]
M V EI: jadx.core.dex.attributes.nodes.LoopInfo.getStart() may expose internal representation by returning LoopInfo.start  At LoopInfo.java:[line 29]
M D RCN: Redundant nullcheck of font, which is known to be non-null in jadx.gui.utils.FontUtils.loadByStr(String)  Redundant null check at FontUtils.java:[line 38]
M V EI: jadx.core.utils.ErrorsCounter.getErrorNodes() may expose internal representation by returning ErrorsCounter.errorNodes  At ErrorsCounter.java:[line 102]
M V EI: jadx.core.utils.ErrorsCounter.getWarnNodes() may expose internal representation by returning ErrorsCounter.warnNodes  At ErrorsCounter.java:[line 106]
M V EI: jadx.core.dex.instructions.args.SSAVar.getAssign() may expose internal representation by returning SSAVar.assign  At SSAVar.java:[line 59]
M V EI: jadx.core.dex.instructions.args.SSAVar.getTypeInfo() may expose internal representation by returning SSAVar.typeInfo  At SSAVar.java:[line 221]
M V EI2: jadx.core.dex.instructions.args.SSAVar.setCodeVar(CodeVar) may expose internal representation by storing an externally mutable object into SSAVar.codeVar  At SSAVar.java:[line 233]
M V EI2: jadx.core.dex.instructions.args.SSAVar.setAssign(RegisterArg) may expose internal representation by storing an externally mutable object into SSAVar.assign  At SSAVar.java:[line 68]
M V EI: jadx.core.dex.instructions.args.SSAVar.getUsedInPhi() may expose internal representation by returning SSAVar.usedInPhi  At SSAVar.java:[line 171]
M V EI: jadx.core.dex.instructions.args.SSAVar.getUseList() may expose internal representation by returning SSAVar.useList  At SSAVar.java:[line 72]
M V EI2: new jadx.core.dex.instructions.args.SSAVar(int, int, RegisterArg) may expose internal representation by storing an externally mutable object into SSAVar.assign  At SSAVar.java:[line 44]
M V EI: jadx.core.dex.instructions.args.SSAVar.getPhiList() may expose internal representation by returning SSAVar.usedInPhi  At SSAVar.java:[line 192]
M V EI: jadx.core.dex.instructions.args.SSAVar.getCodeVar() may expose internal representation by returning SSAVar.codeVar  At SSAVar.java:[line 229]
H I Dm: Found reliance on default encoding in new jadx.gui.device.protocol.ADBDevice$ForwardResult(int, byte[]): new String(byte[])  At ADBDevice.java:[line 94]
M V EI2: new jadx.core.dex.instructions.args.RegisterArg(int, ArgType) may expose internal representation by storing an externally mutable object into RegisterArg.type  At RegisterArg.java:[line 22]
M V EI: jadx.core.dex.instructions.args.RegisterArg.getInitType() may expose internal representation by returning Typed.type  At RegisterArg.java:[line 36]
M V EI: jadx.core.dex.instructions.args.RegisterArg.getSVar() may expose internal representation by returning RegisterArg.sVar  At RegisterArg.java:[line 79]
M V EI: jadx.core.dex.instructions.args.RegisterArg.getImmutableType() may expose internal representation by returning Typed.type  At RegisterArg.java:[line 65]
M V EI2: jadx.core.dex.instructions.args.RegisterArg.forceSetInitType(ArgType) may expose internal representation by storing an externally mutable object into RegisterArg.type  At RegisterArg.java:[line 56]
M V EI2: new jadx.gui.utils.codecache.disk.BufferCodeCache(ICodeCache) may expose internal representation by storing an externally mutable object into BufferCodeCache.backCache  At BufferCodeCache.java:[line 24]
M V EI2: new jadx.core.dex.nodes.InsnNode(InsnType, List) may expose internal representation by storing an externally mutable object into InsnNode.arguments  At InsnNode.java:[line 42]
M V EI: jadx.core.dex.nodes.InsnNode.getArguments() may expose internal representation by returning InsnNode.arguments  At InsnNode.java:[line 96]
M V EI: jadx.core.dex.nodes.InsnNode.getResult() may expose internal representation by returning InsnNode.result  At InsnNode.java:[line 92]
M V EI2: jadx.core.dex.nodes.InsnNode.setResult(RegisterArg) may expose internal representation by storing an externally mutable object into InsnNode.result  At InsnNode.java:[line 56]
M D NP: Possible null pointer dereference in new jadx.gui.utils.fileswatcher.FilesWatcher(List, BiConsumer) due to return value of called method  Method invoked at FilesWatcher.java:[line 48]
M B CT: Exception thrown in class jadx.gui.utils.fileswatcher.FilesWatcher at new jadx.gui.utils.fileswatcher.FilesWatcher(List, BiConsumer) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At FilesWatcher.java:[line 35]
M V EI2: jadx.core.dex.instructions.args.InsnWrapArg.setParentInsn(InsnNode) may expose internal representation by storing an externally mutable object into InsnWrapArg.parentInsn  At InsnWrapArg.java:[line 34]
M V EI: jadx.core.dex.instructions.args.InsnWrapArg.getWrapInsn() may expose internal representation by returning InsnWrapArg.wrappedInsn  At InsnWrapArg.java:[line 26]
M V EI: jadx.core.dex.instructions.ConstClassNode.getClsType() may expose internal representation by returning ConstClassNode.clsType  At ConstClassNode.java:[line 16]
M V EI2: new jadx.core.dex.instructions.ConstClassNode(ArgType) may expose internal representation by storing an externally mutable object into ConstClassNode.clsType  At ConstClassNode.java:[line 12]
M V MS: Public static jadx.gui.utils.NLS.currentLocale() may expose internal representation by returning NLS.currentLocale  At NLS.java:[line 107]
M V MS: jadx.gui.utils.NLS.setLocale(LangLocale) may expose internal static state by storing a mutable object into a static field jadx.gui.utils.NLS.currentLocale  At NLS.java:[line 95]
M V MS: Public static jadx.gui.utils.NLS.getLangLocales() may expose internal representation by returning NLS.LANG_LOCALES  At NLS.java:[line 103]
M V MS: Public static jadx.gui.utils.NLS.defaultLocale() may expose internal representation by returning NLS.LOCAL_LOCALE  At NLS.java:[line 112]
M V EI2: new jadx.gui.ui.codearea.JadxTokenMaker(CodeArea) may expose internal representation by storing an externally mutable object into JadxTokenMaker.codeArea  At JadxTokenMaker.java:[line 27]
M D SF: Switch statement found in jadx.gui.ui.codearea.JadxTokenMaker.processTokens(Token) where default case is missing  At JadxTokenMaker.java:[lines 52-62]
M V MS: Public static jadx.gui.utils.res.ResTableHelper.buildTree(ResContainer) may expose internal representation by returning ResTableHelper.roots  At ResTableHelper.java:[line 26]
M V EI: jadx.core.dex.nodes.MethodNode.getTypeParameters() may expose internal representation by returning MethodNode.typeParameters  At MethodNode.java:[line 278]
M V EI: jadx.core.dex.nodes.MethodNode.getExitBlock() may expose internal representation by returning MethodNode.exitBlock  At MethodNode.java:[line 345]
M V EI2: jadx.core.dex.nodes.MethodNode.setExitBlock(BlockNode) may expose internal representation by storing an externally mutable object into MethodNode.exitBlock  At MethodNode.java:[line 349]
M V EI: jadx.core.dex.nodes.MethodNode.getExceptionHandlers() may expose internal representation by returning MethodNode.exceptionHandlers  At MethodNode.java:[line 419]
M V EI2: jadx.core.dex.nodes.MethodNode.updateReturnType(ArgType) may expose internal representation by storing an externally mutable object into MethodNode.retType  At MethodNode.java:[line 241]
M V EI: jadx.core.dex.nodes.MethodNode.getThisArg() may expose internal representation by returning MethodNode.thisArg  At MethodNode.java:[line 269]
M V EI: jadx.core.dex.nodes.MethodNode.getMethodInfo() may expose internal representation by returning MethodNode.mthInfo  At MethodNode.java:[line 558]
M V EI: jadx.core.dex.nodes.MethodNode.getLoops() may expose internal representation by returning MethodNode.loops  At MethodNode.java:[line 403]
M V EI: jadx.core.dex.nodes.MethodNode.getRegion() may expose internal representation by returning MethodNode.region  At MethodNode.java:[line 534]
M V EI: jadx.core.dex.nodes.MethodNode.getInstructions() may expose internal representation by returning MethodNode.instructions  At MethodNode.java:[line 302]
M V EI2: jadx.core.dex.nodes.MethodNode.setJavaNode(JavaMethod) may expose internal representation by storing an externally mutable object into MethodNode.javaNode  At MethodNode.java:[line 621]
M V EI2: jadx.core.dex.nodes.MethodNode.updateTypes(List, ArgType) may expose internal representation by storing an externally mutable object into MethodNode.argTypes  At MethodNode.java:[line 121]
M V EI: jadx.core.dex.nodes.MethodNode.getArgRegs() may expose internal representation by returning MethodNode.argsList  At MethodNode.java:[line 253]
M V EI2: jadx.core.dex.nodes.MethodNode.setRegion(Region) may expose internal representation by storing an externally mutable object into MethodNode.region  At MethodNode.java:[line 538]
M V EI: jadx.core.dex.nodes.MethodNode.getJavaNode() may expose internal representation by returning MethodNode.javaNode  At MethodNode.java:[line 617]
M V EI2: jadx.core.dex.nodes.MethodNode.updateTypeParameters(List) may expose internal representation by storing an externally mutable object into MethodNode.typeParameters  At MethodNode.java:[line 126]
M V EI: jadx.core.dex.nodes.MethodNode.getArgTypes() may expose internal representation by returning MethodNode.argTypes  At MethodNode.java:[line 221]
M V EI: jadx.core.dex.nodes.MethodNode.getReturnType() may expose internal representation by returning MethodNode.retType  At MethodNode.java:[line 237]
M V EI: jadx.core.dex.nodes.MethodNode.getUseIn() may expose internal representation by returning MethodNode.useIn  At MethodNode.java:[line 609]
M V EI2: jadx.core.dex.nodes.MethodNode.setUseIn(List) may expose internal representation by storing an externally mutable object into MethodNode.useIn  At MethodNode.java:[line 613]
M V EI: jadx.core.dex.nodes.MethodNode.getSVars() may expose internal representation by returning MethodNode.sVars  At MethodNode.java:[line 515]
M V EI2: jadx.core.dex.nodes.MethodNode.setEnterBlock(BlockNode) may expose internal representation by storing an externally mutable object into MethodNode.enterBlock  At MethodNode.java:[line 341]
M V EI: jadx.core.dex.nodes.MethodNode.getBasicBlocks() may expose internal representation by returning MethodNode.blocks  At MethodNode.java:[line 320]
M V EI2: jadx.core.dex.nodes.MethodNode.updateTypes(List, ArgType) may expose internal representation by storing an externally mutable object into MethodNode.retType  At MethodNode.java:[line 122]
M V EI2: jadx.core.dex.nodes.MethodNode.setBasicBlocks(List) may expose internal representation by storing an externally mutable object into MethodNode.blocks  At MethodNode.java:[line 324]
M V EI: jadx.core.dex.nodes.MethodNode.getEnterBlock() may expose internal representation by returning MethodNode.enterBlock  At MethodNode.java:[line 337]
M V EI: jadx.core.dex.nodes.MethodNode.getParentClass() may expose internal representation by returning MethodNode.parentClass  At MethodNode.java:[line 290]
M V EI2: new jadx.gui.jobs.BackgroundExecutor(JadxSettings, ProgressPanel) may expose internal representation by storing an externally mutable object into BackgroundExecutor.settings  At BackgroundExecutor.java:[line 47]
M V EI2: new jadx.gui.jobs.BackgroundExecutor(JadxSettings, ProgressPanel) may expose internal representation by storing an externally mutable object into BackgroundExecutor.progressPane  At BackgroundExecutor.java:[line 48]
M V EI: jadx.core.dex.info.MethodInfo.getArgumentsTypes() may expose internal representation by returning MethodInfo.argTypes  At MethodInfo.java:[line 133]
M V EI: jadx.core.dex.info.MethodInfo.getDeclClass() may expose internal representation by returning MethodInfo.declClass  At MethodInfo.java:[line 125]
M V EI: jadx.core.dex.info.MethodInfo.getReturnType() may expose internal representation by returning MethodInfo.retType  At MethodInfo.java:[line 129]
M V EI: jadx.core.clsp.ClspMethod.getThrows() may expose internal representation by returning ClspMethod.throwList  At ClspMethod.java:[line 67]
M V EI: jadx.core.clsp.ClspMethod.getReturnType() may expose internal representation by returning ClspMethod.returnType  At ClspMethod.java:[line 44]
M V EI2: new jadx.core.clsp.ClspMethod(MethodInfo, List, ArgType, List, List, int) may expose internal representation by storing an externally mutable object into ClspMethod.throwList  At ClspMethod.java:[line 33]
M V EI: jadx.core.clsp.ClspMethod.getTypeParameters() may expose internal representation by returning ClspMethod.typeParameters  At ClspMethod.java:[line 62]
M V EI: jadx.core.clsp.ClspMethod.getMethodInfo() may expose internal representation by returning ClspMethod.methodInfo  At ClspMethod.java:[line 39]
M V EI2: new jadx.core.clsp.ClspMethod(MethodInfo, List, ArgType, List, List, int) may expose internal representation by storing an externally mutable object into ClspMethod.methodInfo  At ClspMethod.java:[line 29]
M V EI: jadx.core.clsp.ClspMethod.getArgTypes() may expose internal representation by returning ClspMethod.argTypes  At ClspMethod.java:[line 49]
M V EI2: new jadx.core.clsp.ClspMethod(MethodInfo, List, ArgType, List, List, int) may expose internal representation by storing an externally mutable object into ClspMethod.typeParameters  At ClspMethod.java:[line 32]
M V EI2: new jadx.core.clsp.ClspMethod(MethodInfo, List, ArgType, List, List, int) may expose internal representation by storing an externally mutable object into ClspMethod.argTypes  At ClspMethod.java:[line 30]
M V EI2: new jadx.core.clsp.ClspMethod(MethodInfo, List, ArgType, List, List, int) may expose internal representation by storing an externally mutable object into ClspMethod.returnType  At ClspMethod.java:[line 31]
H P Bx: Boxing/unboxing to parse a primitive jadx.gui.update.VersionComparator.isZeroTail(String[], int)  At VersionComparator.java:[line 54]
M V EI2: jadx.core.clsp.ClspClass.setTypeParameters(List) may expose internal representation by storing an externally mutable object into ClspClass.typeParameters  At ClspClass.java:[line 76]
M V EI2: jadx.core.clsp.ClspClass.setParents(ArgType[]) may expose internal representation by storing an externally mutable object into ClspClass.parents  At ClspClass.java:[line 45]
M V EI: jadx.core.clsp.ClspClass.getMethodsMap() may expose internal representation by returning ClspClass.methodsMap  At ClspClass.java:[line 49]
M V EI2: new jadx.core.clsp.ClspClass(ArgType, int) may expose internal representation by storing an externally mutable object into ClspClass.clsType  At ClspClass.java:[line 24]
M V EI: jadx.core.clsp.ClspClass.getParents() may expose internal representation by returning ClspClass.parents  At ClspClass.java:[line 41]
M V EI2: jadx.core.clsp.ClspClass.setMethodsMap(Map) may expose internal representation by storing an externally mutable object into ClspClass.methodsMap  At ClspClass.java:[line 60]
M V EI: jadx.core.clsp.ClspClass.getClsType() may expose internal representation by returning ClspClass.clsType  At ClspClass.java:[line 33]
M V EI: jadx.core.clsp.ClspClass.getTypeParameters() may expose internal representation by returning ClspClass.typeParameters  At ClspClass.java:[line 72]
M V EI: jadx.gui.utils.CacheObject.getNodeCache() may expose internal representation by returning CacheObject.jNodeCache  At CacheObject.java:[line 42]
M V EI2: jadx.gui.utils.CacheObject.setDecompileBatches(List) may expose internal representation by storing an externally mutable object into CacheObject.decompileBatches  At CacheObject.java:[line 54]
M V EI: jadx.gui.utils.CacheObject.getLastSearchOptions() may expose internal representation by returning CacheObject.lastSearchOptions  At CacheObject.java:[line 46]
M V EI: jadx.gui.utils.CacheObject.getDecompileBatches() may expose internal representation by returning CacheObject.decompileBatches  At CacheObject.java:[line 50]
M V EI: jadx.core.clsp.SimpleMethodDetails.getMethodInfo() may expose internal representation by returning SimpleMethodDetails.methodInfo  At SimpleMethodDetails.java:[line 25]
M V EI2: new jadx.core.clsp.SimpleMethodDetails(MethodInfo) may expose internal representation by storing an externally mutable object into SimpleMethodDetails.methodInfo  At SimpleMethodDetails.java:[line 20]
M V EI2: jadx.core.dex.instructions.args.InsnArg.setParentInsn(InsnNode) may expose internal representation by storing an externally mutable object into InsnArg.parentInsn  At InsnArg.java:[line 95]
M V EI: jadx.core.dex.instructions.args.InsnArg.getParentInsn() may expose internal representation by returning InsnArg.parentInsn  At InsnArg.java:[line 91]
M V EI2: new jadx.gui.utils.TextStandardActions(JTextComponent) may expose internal representation by storing an externally mutable object into TextStandardActions.textComponent  At TextStandardActions.java:[line 37]
M V EI2: new jadx.core.dex.instructions.InvokeNode(MethodInfo, InvokeType, int) may expose internal representation by storing an externally mutable object into InvokeNode.mth  At InvokeNode.java:[line 43]
M V EI2: new jadx.core.dex.instructions.InvokeNode(MethodInfo, InsnData, InvokeType, boolean, boolean) may expose internal representation by storing an externally mutable object into InvokeNode.mth  At InvokeNode.java:[line 22]
M V EI: jadx.core.dex.instructions.InvokeNode.getCallMth() may expose internal representation by returning InvokeNode.mth  At InvokeNode.java:[line 53]
M V EI: jadx.core.dex.attributes.nodes.PhiListAttr.getList() may expose internal representation by returning PhiListAttr.list  At PhiListAttr.java:[line 21]
M V EI: jadx.gui.device.debugger.SmaliDebugger$RuntimeDebugInfo.getInfoList() may expose internal representation by returning SmaliDebugger$RuntimeDebugInfo.infoList  At SmaliDebugger.java:[line 1328]
M V EI: jadx.core.dex.trycatch.ExceptionHandler.getCatchTypes() may expose internal representation by returning ExceptionHandler.catchTypes  At ExceptionHandler.java:[line 73]
M V EI: jadx.core.dex.trycatch.ExceptionHandler.getArg() may expose internal representation by returning ExceptionHandler.arg  At ExceptionHandler.java:[line 129]
M V EI2: jadx.core.dex.trycatch.ExceptionHandler.setHandlerBlock(BlockNode) may expose internal representation by storing an externally mutable object into ExceptionHandler.handlerBlock  At ExceptionHandler.java:[line 109]
M V EI: jadx.core.dex.trycatch.ExceptionHandler.getBlocks() may expose internal representation by returning ExceptionHandler.blocks  At ExceptionHandler.java:[line 113]
M V EI: jadx.core.dex.trycatch.ExceptionHandler.getTryBlock() may expose internal representation by returning ExceptionHandler.tryBlock  At ExceptionHandler.java:[line 141]
M V EI2: jadx.core.dex.trycatch.ExceptionHandler.setArg(InsnArg) may expose internal representation by storing an externally mutable object into ExceptionHandler.arg  At ExceptionHandler.java:[line 133]
M V EI: jadx.core.dex.trycatch.ExceptionHandler.getHandlerBlock() may expose internal representation by returning ExceptionHandler.handlerBlock  At ExceptionHandler.java:[line 105]
M V EI2: jadx.core.dex.trycatch.ExceptionHandler.setTryBlock(TryCatchBlockAttr) may expose internal representation by storing an externally mutable object into ExceptionHandler.tryBlock  At ExceptionHandler.java:[line 137]
M V EI2: jadx.core.dex.trycatch.TryCatchBlockAttr.setOuterTryBlock(TryCatchBlockAttr) may expose internal representation by storing an externally mutable object into TryCatchBlockAttr.outerTryBlock  At TryCatchBlockAttr.java:[line 114]
M V EI: jadx.core.dex.trycatch.TryCatchBlockAttr.getInnerTryBlocks() may expose internal representation by returning TryCatchBlockAttr.innerTryBlocks  At TryCatchBlockAttr.java:[line 99]
M V EI: jadx.core.dex.trycatch.TryCatchBlockAttr.getOuterTryBlock() may expose internal representation by returning TryCatchBlockAttr.outerTryBlock  At TryCatchBlockAttr.java:[line 110]
M V EI2: new jadx.core.dex.trycatch.TryCatchBlockAttr(int, List, List) may expose internal representation by storing an externally mutable object into TryCatchBlockAttr.blocks  At TryCatchBlockAttr.java:[line 29]
M V EI: jadx.core.dex.trycatch.TryCatchBlockAttr.getHandlers() may expose internal representation by returning TryCatchBlockAttr.handlers  At TryCatchBlockAttr.java:[line 68]
M V EI2: new jadx.core.dex.trycatch.TryCatchBlockAttr(int, List, List) may expose internal representation by storing an externally mutable object into TryCatchBlockAttr.handlers  At TryCatchBlockAttr.java:[line 28]
M V EI: jadx.core.dex.trycatch.TryCatchBlockAttr.getTopSplitter() may expose internal representation by returning TryCatchBlockAttr.topSplitter  At TryCatchBlockAttr.java:[line 118]
M V EI2: jadx.core.dex.trycatch.TryCatchBlockAttr.setBlocks(List) may expose internal representation by storing an externally mutable object into TryCatchBlockAttr.blocks  At TryCatchBlockAttr.java:[line 80]
M V EI2: jadx.core.dex.trycatch.TryCatchBlockAttr.setTopSplitter(BlockNode) may expose internal representation by storing an externally mutable object into TryCatchBlockAttr.topSplitter  At TryCatchBlockAttr.java:[line 122]
M V EI: jadx.core.dex.trycatch.TryCatchBlockAttr.getBlocks() may expose internal representation by returning TryCatchBlockAttr.blocks  At TryCatchBlockAttr.java:[line 76]
M V EI: jadx.core.dex.info.FieldInfo.getType() may expose internal representation by returning FieldInfo.type  At FieldInfo.java:[line 40]
M V EI: jadx.core.dex.info.FieldInfo.getDeclClass() may expose internal representation by returning FieldInfo.declClass  At FieldInfo.java:[line 44]
M D NP: Possible null pointer dereference in jadx.core.dex.nodes.ClassNode.isEnum() due to return value of called method  Dereferenced at ClassNode.java:[line 659]
M V EI: jadx.core.dex.nodes.ClassNode.getGenericTypeParameters() may expose internal representation by returning ClassNode.generics  At ClassNode.java:[line 455]
M V EI2: jadx.core.dex.nodes.ClassNode.updateParentClass() may expose internal representation by storing an externally mutable object into ClassNode.parentClass  At ClassNode.java:[line 571]
M V EI2: jadx.core.dex.nodes.ClassNode.setUseIn(List) may expose internal representation by storing an externally mutable object into ClassNode.useIn  At ClassNode.java:[line 825]
M V EI: jadx.core.dex.nodes.ClassNode.root() may expose internal representation by returning ClassNode.root  At ClassNode.java:[line 705]
M V EI2: jadx.core.dex.nodes.ClassNode.updateGenericClsData(ArgType, List, List) may expose internal representation by storing an externally mutable object into ClassNode.interfaces  At ClassNode.java:[line 179]
M V EI: jadx.core.dex.nodes.ClassNode.getMethods() may expose internal representation by returning ClassNode.methods  At ClassNode.java:[line 467]
M V EI: jadx.core.dex.nodes.ClassNode.getJavaNode() may expose internal representation by returning ClassNode.javaNode  At ClassNode.java:[line 842]
M V EI: jadx.core.dex.nodes.ClassNode.getUseIn() may expose internal representation by returning ClassNode.useIn  At ClassNode.java:[line 821]
M V EI: jadx.core.dex.nodes.ClassNode.getClassInfo() may expose internal representation by returning ClassNode.clsInfo  At ClassNode.java:[line 721]
M V EI: jadx.core.dex.nodes.ClassNode.getParentClass() may expose internal representation by returning ClassNode.parentClass  At ClassNode.java:[line 560]
M V EI: jadx.core.dex.nodes.ClassNode.getInterfaces() may expose internal representation by returning ClassNode.interfaces  At ClassNode.java:[line 451]
M V EI: jadx.core.dex.nodes.ClassNode.getFields() may expose internal representation by returning ClassNode.fields  At ClassNode.java:[line 471]
M V EI2: jadx.core.dex.nodes.ClassNode.setUseInMth(List) may expose internal representation by storing an externally mutable object into ClassNode.useInMth  At ClassNode.java:[line 833]
M V EI: jadx.core.dex.nodes.ClassNode.getInlinedClasses() may expose internal representation by returning ClassNode.inlinedClasses  At ClassNode.java:[line 618]
M V EI: jadx.core.dex.nodes.ClassNode.getInnerClasses() may expose internal representation by returning ClassNode.innerClasses  At ClassNode.java:[line 614]
M V EI: jadx.core.dex.nodes.ClassNode.getDependencies() may expose internal representation by returning ClassNode.dependencies  At ClassNode.java:[line 791]
M V EI2: jadx.core.dex.nodes.ClassNode.setJavaNode(JavaClass) may expose internal representation by storing an externally mutable object into ClassNode.javaNode  At ClassNode.java:[line 846]
M V EI2: jadx.core.dex.nodes.ClassNode.setCodegenDeps(List) may expose internal representation by storing an externally mutable object into ClassNode.codegenDeps  At ClassNode.java:[line 807]
M V EI: jadx.core.dex.nodes.ClassNode.getUseInMth() may expose internal representation by returning ClassNode.useInMth  At ClassNode.java:[line 829]
M V EI2: jadx.core.dex.nodes.ClassNode.updateGenericClsData(ArgType, List, List) may expose internal representation by storing an externally mutable object into ClassNode.generics  At ClassNode.java:[line 180]
M V EI: jadx.core.dex.nodes.ClassNode.getSuperClass() may expose internal representation by returning ClassNode.superClass  At ClassNode.java:[line 447]
M V EI2: new jadx.core.dex.nodes.ClassNode(RootNode, IClassData) may expose internal representation by storing an externally mutable object into ClassNode.root  At ClassNode.java:[line 107]
M V EI2: jadx.core.dex.nodes.ClassNode.updateGenericClsData(ArgType, List, List) may expose internal representation by storing an externally mutable object into ClassNode.superClass  At ClassNode.java:[line 178]
M V EI2: jadx.core.dex.nodes.ClassNode.setDependencies(List) may expose internal representation by storing an externally mutable object into ClassNode.dependencies  At ClassNode.java:[line 795]
M V EI: jadx.core.dex.nodes.ClassNode.getCodegenDeps() may expose internal representation by returning ClassNode.codegenDeps  At ClassNode.java:[line 803]
H P Bx: Primitive boxed just to call toString in jadx.gui.utils.CertificateManager.generateHeader()  At CertificateManager.java:[line 60]
M V EI2: new jadx.gui.utils.CertificateManager(Certificate) may expose internal representation by storing an externally mutable object into CertificateManager.x509cert  At CertificateManager.java:[line 53]
M V EI2: new jadx.gui.utils.CertificateManager(Certificate) may expose internal representation by storing an externally mutable object into CertificateManager.cert  At CertificateManager.java:[line 50]
M V EI2: new jadx.core.dex.nodes.FieldNode(ClassNode, FieldInfo, int) may expose internal representation by storing an externally mutable object into FieldNode.parentClass  At FieldNode.java:[line 35]
M V EI: jadx.core.dex.nodes.FieldNode.getFieldInfo() may expose internal representation by returning FieldNode.fieldInfo  At FieldNode.java:[line 46]
M V EI: jadx.core.dex.nodes.FieldNode.getParentClass() may expose internal representation by returning FieldNode.parentClass  At FieldNode.java:[line 84]
M V EI: jadx.core.dex.nodes.FieldNode.getType() may expose internal representation by returning FieldNode.type  At FieldNode.java:[line 80]
M V EI: jadx.core.dex.nodes.FieldNode.getUseIn() may expose internal representation by returning FieldNode.useIn  At FieldNode.java:[line 92]
M V EI2: jadx.core.dex.nodes.FieldNode.setJavaNode(JavaField) may expose internal representation by storing an externally mutable object into FieldNode.javaNode  At FieldNode.java:[line 123]
M V EI2: jadx.core.dex.nodes.FieldNode.updateType(ArgType) may expose internal representation by storing an externally mutable object into FieldNode.type  At FieldNode.java:[line 42]
M V EI2: jadx.core.dex.nodes.FieldNode.setUseIn(List) may expose internal representation by storing an externally mutable object into FieldNode.useIn  At FieldNode.java:[line 96]
M V EI: jadx.core.dex.nodes.FieldNode.getJavaNode() may expose internal representation by returning FieldNode.javaNode  At FieldNode.java:[line 119]
M V EI2: new jadx.core.dex.nodes.FieldNode(ClassNode, FieldInfo, int) may expose internal representation by storing an externally mutable object into FieldNode.fieldInfo  At FieldNode.java:[line 36]
H I Dm: Found reliance on default encoding in jadx.gui.device.debugger.smali.Smali$LineInfo.writeTip(SmaliWriter, int, int): new String(byte[])  At Smali.java:[line 1006]
M V EI2: jadx.core.dex.info.ConstStorage.setResourcesNames(Map) may expose internal representation by storing an externally mutable object into ConstStorage.resourcesNames  At ConstStorage.java:[line 213]
M V EI: jadx.core.dex.info.ConstStorage.getResourcesNames() may expose internal representation by returning ConstStorage.resourcesNames  At ConstStorage.java:[line 217]
M D BC: Unchecked/unconfirmed cast from jadx.core.dex.nodes.InsnNode to jadx.core.dex.instructions.IndexInsnNode in jadx.core.utils.InsnUtils.getConstValueByInsn(RootNode, InsnNode)  At InsnUtils.java:[line 99]
M D BC: Unchecked/unconfirmed cast from jadx.core.dex.nodes.InsnNode to jadx.core.dex.instructions.ConstStringNode in jadx.core.utils.InsnUtils.getConstValueByInsn(RootNode, InsnNode)  At InsnUtils.java:[line 95]
M D BC: Unchecked/unconfirmed cast from jadx.core.dex.nodes.InsnNode to jadx.core.dex.instructions.ConstClassNode in jadx.core.utils.InsnUtils.getConstValueByInsn(RootNode, InsnNode)  At InsnUtils.java:[line 97]
M V EI2: jadx.core.dex.instructions.IfNode.replaceTargetBlock(BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into IfNode.elseBlock  At IfNode.java:[line 108]
M V EI: jadx.core.dex.instructions.IfNode.getThenBlock() may expose internal representation by returning IfNode.thenBlock  At IfNode.java:[line 115]
M V EI2: jadx.core.dex.instructions.IfNode.replaceTargetBlock(BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into IfNode.thenBlock  At IfNode.java:[line 104]
M V EI: jadx.core.dex.instructions.IfNode.getElseBlock() may expose internal representation by returning IfNode.elseBlock  At IfNode.java:[line 119]
M V EI2: new jadx.core.dex.regions.conditions.Compare(IfNode) may expose internal representation by storing an externally mutable object into Compare.insn  At Compare.java:[line 13]
M V EI: jadx.core.dex.regions.conditions.Compare.getInsn() may expose internal representation by returning Compare.insn  At Compare.java:[line 29]
M V EI: jadx.core.dex.regions.conditions.IfCondition.getArgs() may expose internal representation by returning IfCondition.args  At IfCondition.java:[line 93]
M V EI: jadx.gui.settings.WindowLocation.getBounds() may expose internal representation by returning WindowLocation.bounds  At WindowLocation.java:[line 27]
M V EI2: jadx.gui.settings.WindowLocation.setBounds(Rectangle) may expose internal representation by storing an externally mutable object into WindowLocation.bounds  At WindowLocation.java:[line 31]
M V EI2: new jadx.gui.settings.WindowLocation(String, Rectangle) may expose internal representation by storing an externally mutable object into WindowLocation.bounds  At WindowLocation.java:[line 15]
M V EI2: new jadx.gui.utils.codecache.disk.adapters.FieldNodeAdapter(RootNode) may expose internal representation by storing an externally mutable object into FieldNodeAdapter.root  At FieldNodeAdapter.java:[line 16]
M V EI: jadx.core.dex.instructions.mods.TernaryInsn.getCondition() may expose internal representation by returning TernaryInsn.condition  At TernaryInsn.java:[line 39]
M V EI2: new jadx.core.dex.instructions.mods.TernaryInsn(IfCondition, RegisterArg, InsnArg, InsnArg) may expose internal representation by storing an externally mutable object into TernaryInsn.condition  At TernaryInsn.java:[line 27]
H P Dm: jadx.gui.utils.codecache.CodeStringCache.lambda$new$2(Boolean) forces garbage collection; extremely dubious except in benchmarking code  At CodeStringCache.java:[line 44]
M V EI: jadx.gui.utils.OverlayIcon.getIcons() may expose internal representation by returning OverlayIcon.icons  At OverlayIcon.java:[line 58]
M V EI: jadx.gui.settings.data.ProjectData.getOpenTabs() may expose internal representation by returning ProjectData.openTabs  At ProjectData.java:[line 58]
M V EI: jadx.gui.settings.data.ProjectData.getSearchHistory() may expose internal representation by returning ProjectData.searchHistory  At ProjectData.java:[line 109]
M V EI2: jadx.gui.settings.data.ProjectData.setSearchHistory(List) may expose internal representation by storing an externally mutable object into ProjectData.searchHistory  At ProjectData.java:[line 113]
M V EI: jadx.gui.settings.data.ProjectData.getFiles() may expose internal representation by returning ProjectData.files  At ProjectData.java:[line 26]
M V EI2: jadx.gui.settings.data.ProjectData.setTreeExpansions(List) may expose internal representation by storing an externally mutable object into ProjectData.treeExpansions  At ProjectData.java:[line 38]
M V EI: jadx.gui.settings.data.ProjectData.getTreeExpansions() may expose internal representation by returning ProjectData.treeExpansions  At ProjectData.java:[line 34]
M V EI2: jadx.gui.settings.data.ProjectData.setFiles(List) may expose internal representation by storing an externally mutable object into ProjectData.files  At ProjectData.java:[line 30]
M V EI: jadx.gui.settings.data.ProjectData.getCodeData() may expose internal representation by returning ProjectData.codeData  At ProjectData.java:[line 42]
M V EI2: jadx.gui.settings.data.ProjectData.setCodeData(JadxCodeData) may expose internal representation by storing an externally mutable object into ProjectData.codeData  At ProjectData.java:[line 46]
M V EI2: jadx.gui.settings.data.ProjectData.setOpenTabs(List) may expose internal representation by storing an externally mutable object into ProjectData.openTabs  At ProjectData.java:[line 70]
M B NP: jadx.gui.plugins.mappings.MappingExporter.lambda$collectMethodVars$1(AtomicInteger, MethodNode, List, Integer, ICodeAnnotation) has Boolean return type and returns explicit null  At MappingExporter.java:[line 107]
M B NP: jadx.gui.plugins.mappings.MappingExporter.lambda$collectMethodArgs$0(int, MethodNode, List, Integer, ICodeAnnotation) has Boolean return type and returns explicit null  At MappingExporter.java:[line 74]
M V EI2: new jadx.gui.plugins.mappings.MappingExporter(RootNode) may expose internal representation by storing an externally mutable object into MappingExporter.root  At MappingExporter.java:[line 50]
M B RV: Exceptional return value of java.io.File.delete() ignored in jadx.gui.plugins.mappings.MappingExporter.exportMappings(Path, JadxCodeData, MappingFormat)  At MappingExporter.java:[line 156]
M B RV: Exceptional return value of java.io.File.createNewFile() ignored in jadx.gui.plugins.mappings.MappingExporter.exportMappings(Path, JadxCodeData, MappingFormat)  At MappingExporter.java:[line 158]
M V EI: jadx.core.dex.nodes.RootNode.getInfoStorage() may expose internal representation by returning RootNode.infoStorage  At RootNode.java:[line 522]
M V EI: jadx.core.dex.nodes.RootNode.getConstValues() may expose internal representation by returning RootNode.constValues  At RootNode.java:[line 518]
M V EI: jadx.core.dex.nodes.RootNode.getTypeUtils() may expose internal representation by returning RootNode.typeUtils  At RootNode.java:[line 550]
M V EI: jadx.core.dex.nodes.RootNode.getClasses() may expose internal representation by returning RootNode.classes  At RootNode.java:[line 298]
M V EI: jadx.core.dex.nodes.RootNode.getCacheStorage() may expose internal representation by returning RootNode.cacheStorage  At RootNode.java:[line 526]
M V EI: jadx.core.dex.nodes.RootNode.getAppResClass() may expose internal representation by returning RootNode.appResClass  At RootNode.java:[line 510]
M V EI: jadx.core.dex.nodes.RootNode.getClsp() may expose internal representation by returning RootNode.clsp  At RootNode.java:[line 496]
M V EI: jadx.core.dex.nodes.RootNode.getErrorsCounter() may expose internal representation by returning RootNode.errorsCounter  At RootNode.java:[line 500]
M V EI: jadx.core.dex.nodes.RootNode.getClasses(boolean) may expose internal representation by returning RootNode.classes  At RootNode.java:[line 307]
M V EI2: new jadx.core.dex.nodes.RootNode(JadxArgs) may expose internal representation by storing an externally mutable object into RootNode.args  At RootNode.java:[line 79]
M V EI: jadx.core.dex.nodes.RootNode.getArgs() may expose internal representation by returning RootNode.args  At RootNode.java:[line 530]
M V MS: Public static jadx.gui.ui.codearea.EditorTheme.getAllThemes() may expose internal representation by returning EditorTheme.ALL_THEMES  At EditorTheme.java:[line 18]
M V MS: Public static jadx.gui.utils.PathTypeAdapter.singleton() may expose internal representation by returning PathTypeAdapter.SINGLETON  At PathTypeAdapter.java:[line 35]
M D NP: Possible null pointer dereference in jadx.gui.device.debugger.RegisterObserver.merge(List, List) due to return value of called method  Dereferenced at RegisterObserver.java:[line 48]
M V EI2: new jadx.core.xmlgen.ResTableParser(RootNode, boolean) may expose internal representation by storing an externally mutable object into ResTableParser.root  At ResTableParser.java:[line 79]
M V EI: jadx.core.xmlgen.ResTableParser.getResStorage() may expose internal representation by returning ResTableParser.resStorage  At ResTableParser.java:[line 512]
M V EI: jadx.core.xmlgen.ResTableParser.getStrings() may expose internal representation by returning ResTableParser.strings  At ResTableParser.java:[line 517]
M B Se: Class jadx.gui.device.debugger.LogcatController$LogcatFilter$1 defines non-transient non-serializable instance field this$1  In LogcatController.java
M V MS: Public static jadx.gui.utils.RectangleTypeAdapter.singleton() may expose internal representation by returning RectangleTypeAdapter.SINGLETON  At RectangleTypeAdapter.java:[line 62]
M V EI: jadx.gui.utils.JumpPosition.getNode() may expose internal representation by returning JumpPosition.node  At JumpPosition.java:[line 28]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatFilter(LogcatController, ArrayList, ArrayList) may expose internal representation by storing an externally mutable object into LogcatController$LogcatFilter.this$0  At LogcatController.java:[line 180]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatFilter(LogcatController, ArrayList, ArrayList) may expose internal representation by storing an externally mutable object into LogcatController$LogcatFilter.pid  At LogcatController.java:[line 182]
M V EI2: new jadx.gui.device.debugger.LogcatController$LogcatFilter(LogcatController, ArrayList, ArrayList) may expose internal representation by storing an externally mutable object into LogcatController$LogcatFilter.msgType  At LogcatController.java:[line 188]
M V EI2: new jadx.gui.treemodel.CodeNode(JClass, JNode, String, int) may expose internal representation by storing an externally mutable object into CodeNode.jNode  At CodeNode.java:[line 19]
M V EI: jadx.gui.treemodel.CodeNode.getRootClass() may expose internal representation by returning CodeNode.rootCls  At CodeNode.java:[line 41]
M V EI2: new jadx.gui.treemodel.CodeNode(JClass, JNode, String, int) may expose internal representation by storing an externally mutable object into CodeNode.rootCls  At CodeNode.java:[line 18]
M D DLS: Dead store to id in jadx.core.xmlgen.ResTableParser.parseTypeSpecChunk(long)  At ResTableParser.java:[line 215]
M V EI: jadx.gui.settings.JadxSettings.getLangLocale() may expose internal representation by returning JadxSettings.langLocale  At JadxSettings.java:[line 317]
M V EI2: jadx.gui.settings.JadxSettings.setLangLocale(LangLocale) may expose internal representation by storing an externally mutable object into JadxSettings.langLocale  At JadxSettings.java:[line 321]
M V EI2: jadx.gui.settings.JadxSettings.setPluginOptions(Map) may expose internal representation by storing an externally mutable object into JadxSettings.pluginOptions  At JadxSettings.java:[line 651]
M D NP: Possible null pointer dereference in jadx.core.clsp.ClsSet.save(Path) due to return value of called method  Dereferenced at ClsSet.java:[line 175]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.isOkay(InputStream): new String(byte[])  At ADB.java:[line 54]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.execCommandAsync(OutputStream, InputStream, String): String.getBytes()  At ADB.java:[line 76]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.execCommandSync(OutputStream, InputStream, String): String.getBytes()  At ADB.java:[line 81]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.setSerial(String, OutputStream, InputStream): String.getBytes()  At ADB.java:[line 116]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.execShellCommandRaw(String, OutputStream, InputStream): String.getBytes()  At ADB.java:[line 130]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.getFeatures(): new String(byte[])  At ADB.java:[line 147]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.startServer(String, int): java.io.ByteArrayOutputStream.toString()  At ADB.java:[line 175]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.listForward(String, int): String.getBytes()  At ADB.java:[line 228]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.listForward(String, int): new String(byte[])  At ADB.java:[line 232]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.removeForward(String, int, String, String): String.getBytes()  At ADB.java:[line 247]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.lambda$listenForDeviceState$0(InputStream, ADB$DeviceStateListener, String, int): new String(byte[])  At ADB.java:[line 205]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADB.<static initializer for ADB>(): String.getBytes()  At ADB.java:[line 34]
M V EI2: new jadx.core.clsp.ClsSet(RootNode) may expose internal representation by storing an externally mutable object into ClsSet.root  At ClsSet.java:[line 62]
M P UPM: Private method jadx.core.clsp.ClsSet.load(File) is never called  At ClsSet.java:[lines 313-331]
M V EI2: jadx.gui.ui.popupmenu.VarTreePopupMenu.show(JDebuggerPanel$ValueTreeNode, Component, int, int) may expose internal representation by storing an externally mutable object into VarTreePopupMenu.valNode  At VarTreePopupMenu.java:[line 37]
M V EI2: new jadx.gui.ui.popupmenu.VarTreePopupMenu(MainWindow) may expose internal representation by storing an externally mutable object into VarTreePopupMenu.mainWindow  At VarTreePopupMenu.java:[line 32]
M V DP: jadx.gui.plugins.jadxecute.UserCodeLoader.runInputCode(String, MainWindow) creates a jadx.gui.plugins.jadxecute.UserCodeLoader$CompiledClassLoader classloader, which should be performed within a doPrivileged block  At UserCodeLoader.java:[line 25]
M P SBSC: jadx.gui.plugins.jadxecute.UserCodeLoader.runInputCode(String, MainWindow) concatenates strings using + in a loop  At UserCodeLoader.java:[line 33]
M V EI2: new jadx.core.clsp.ClspGraph(RootNode) may expose internal representation by storing an externally mutable object into ClspGraph.root  At ClspGraph.java:[line 38]
M V EI2: new jadx.core.xmlgen.ResProtoParser(RootNode) may expose internal representation by storing an externally mutable object into ResProtoParser.root  At ResProtoParser.java:[line 37]
M V EI: jadx.core.xmlgen.ResProtoParser.getResStorage() may expose internal representation by returning ResProtoParser.resStorage  At ResProtoParser.java:[line 251]
M D RV: Return value of com.android.aapt.ConfigurationOuterClass$Configuration.getScreenLayoutSize() ignored, but method has no side effect  At ResProtoParser.java:[line 189]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.forwardJDWP(String, String): String.getBytes()  At ADBDevice.java:[line 70]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.launchApp(String): new String(byte[])  At ADBDevice.java:[line 114]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.getTimezone(): new String(byte[])  At ADBDevice.java:[line 165]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.getProp(String): new String(byte[])  At ADBDevice.java:[line 195]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.getProcessList(String): new String(byte[])  At ADBDevice.java:[line 222]
H I Dm: Found reliance on default encoding in jadx.gui.device.protocol.ADBDevice.lambda$listenForJDWP$0(InputStream, ADB$JDWPProcessListener): new String(byte[])  At ADBDevice.java:[line 255]
M V EI2: new jadx.api.metadata.annotations.VarRef$RelatedVarRef(VarNode) may expose internal representation by storing an externally mutable object into VarRef$RelatedVarRef.varNode  At VarRef.java:[line 50]
M V EI2: new jadx.api.metadata.annotations.VarNode(MethodNode, int, int, ArgType, String) may expose internal representation by storing an externally mutable object into VarNode.mth  At VarNode.java:[line 71]
M V EI: jadx.api.metadata.annotations.VarNode.getMth() may expose internal representation by returning VarNode.mth  At VarNode.java:[line 80]
M V EI: jadx.api.metadata.annotations.VarNode.getType() may expose internal representation by returning VarNode.type  At VarNode.java:[line 92]
M V EI2: new jadx.api.metadata.annotations.VarNode(MethodNode, int, int, ArgType, String) may expose internal representation by storing an externally mutable object into VarNode.type  At VarNode.java:[line 74]
M V MS: Public static jadx.gui.utils.logs.LogCollector.getInstance() may expose internal representation by returning LogCollector.INSTANCE  At LogCollector.java:[line 23]
M V EI2: new jadx.core.utils.InsnRemover(MethodNode, BlockNode) may expose internal representation by storing an externally mutable object into InsnRemover.mth  At InsnRemover.java:[line 41]
M V EI: jadx.core.dex.instructions.mods.ConstructorInsn.getCallMth() may expose internal representation by returning ConstructorInsn.callMth  At ConstructorInsn.java:[line 59]
M V EI2: new jadx.core.dex.instructions.mods.ConstructorInsn(MethodInfo, ConstructorInsn$CallType) may expose internal representation by storing an externally mutable object into ConstructorInsn.callMth  At ConstructorInsn.java:[line 53]
M V EI: jadx.core.dex.instructions.FillArrayData.getElementType() may expose internal representation by returning FillArrayData.elemType  At FillArrayData.java:[line 64]
M V EI: jadx.core.dex.instructions.SwitchData.getTargets() may expose internal representation by returning SwitchData.targets  At SwitchData.java:[line 36]
M V EI: jadx.core.dex.instructions.SwitchData.getKeys() may expose internal representation by returning SwitchData.keys  At SwitchData.java:[line 32]
M D IM: Check for oddness that won't work for negative numbers in jadx.gui.device.debugger.smali.Smali.formatByteCode(StringBuilder, byte[])  At Smali.java:[line 743]
H I Dm: Found reliance on default encoding in jadx.gui.device.debugger.smali.Smali.writeFields(SmaliWriter, IClassData, List, int[]): new String(byte[])  At Smali.java:[line 249]
H I Dm: Found reliance on default encoding in jadx.gui.device.debugger.smali.Smali.fmtSwitchPayload(InsnData, String, String, Smali$LineInfo, ISwitchPayload): new String(byte[])  At Smali.java:[line 788]
M V EI: jadx.core.codegen.ClassGen.getImports() may expose internal representation by returning ClassGen.imports  At ClassGen.java:[line 701]
M V EI: jadx.core.codegen.ClassGen.getOuterNameGen() may expose internal representation by returning ClassGen.outerNameGen  At ClassGen.java:[line 819]
M V EI: jadx.core.codegen.ClassGen.getAnnotationGen() may expose internal representation by returning ClassGen.annotationGen  At ClassGen.java:[line 802]
M V EI2: new jadx.core.codegen.ClassGen(ClassNode, ClassGen, boolean, boolean, boolean) may expose internal representation by storing an externally mutable object into ClassGen.cls  At ClassGen.java:[line 80]
M V EI2: new jadx.core.codegen.ClassGen(ClassNode, ClassGen, boolean, boolean, boolean) may expose internal representation by storing an externally mutable object into ClassGen.parentGen  At ClassGen.java:[line 81]
M V EI2: jadx.core.codegen.ClassGen.setOuterNameGen(NameGen) may expose internal representation by storing an externally mutable object into ClassGen.outerNameGen  At ClassGen.java:[line 823]
M V EI: jadx.core.codegen.ClassGen.getClassNode() may expose internal representation by returning ClassGen.cls  At ClassGen.java:[line 90]
M V EI2: new jadx.gui.utils.codecache.disk.adapters.VarNodeAdapter(MethodNodeAdapter) may expose internal representation by storing an externally mutable object into VarNodeAdapter.mthAdapter  At VarNodeAdapter.java:[line 20]
M V EI2: new jadx.gui.device.debugger.LogcatController(LogcatPanel, ADBDevice) may expose internal representation by storing an externally mutable object into LogcatController.logcatPanel  At LogcatController.java:[line 33]
M V EI: jadx.gui.device.debugger.LogcatController.getFilter() may expose internal representation by returning LogcatController.filter  At LogcatController.java:[line 162]
M V EI2: new jadx.gui.device.debugger.LogcatController(LogcatPanel, ADBDevice) may expose internal representation by storing an externally mutable object into LogcatController.adbDevice  At LogcatController.java:[line 32]
M B CT: Exception thrown in class jadx.gui.device.debugger.LogcatController at new jadx.gui.device.debugger.LogcatController(LogcatPanel, ADBDevice) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At LogcatController.java:[line 36]
M V EI2: jadx.core.dex.instructions.InvokeCustomNode.setImplMthInfo(MethodInfo) may expose internal representation by storing an externally mutable object into InvokeCustomNode.implMthInfo  At InvokeCustomNode.java:[line 60]
M V EI: jadx.core.dex.instructions.InvokeCustomNode.getImplMthInfo() may expose internal representation by returning InvokeCustomNode.implMthInfo  At InvokeCustomNode.java:[line 56]
M V EI: jadx.core.dex.instructions.InvokeCustomNode.getInvokeCall() may expose internal representation by returning InvokeCustomNode.callInsn  At InvokeCustomNode.java:[line 98]
M V EI2: jadx.core.dex.instructions.InvokeCustomNode.setCallInsn(InsnNode) may expose internal representation by storing an externally mutable object into InvokeCustomNode.callInsn  At InvokeCustomNode.java:[line 76]
M V EI: jadx.core.dex.instructions.InvokeCustomNode.getCallInsn() may expose internal representation by returning InvokeCustomNode.callInsn  At InvokeCustomNode.java:[line 72]
M B RR: jadx.gui.utils.codecache.disk.CodeMetadataAdapter.readAndBuild(Path, String) ignores result of java.io.DataInputStream.skipBytes(int)  At CodeMetadataAdapter.java:[line 61]
M V EI2: jadx.core.dex.instructions.FillArrayInsn.setArrayData(FillArrayData) may expose internal representation by storing an externally mutable object into FillArrayInsn.arrayData  At FillArrayInsn.java:[line 26]
M V EI: jadx.core.dex.instructions.FilledNewArrayNode.getElemType() may expose internal representation by returning FilledNewArrayNode.elemType  At FilledNewArrayNode.java:[line 18]
M V EI2: new jadx.core.dex.instructions.FilledNewArrayNode(ArgType, int) may expose internal representation by storing an externally mutable object into FilledNewArrayNode.elemType  At FilledNewArrayNode.java:[line 14]
M V EI: jadx.core.dex.instructions.NewArrayNode.getArrayType() may expose internal representation by returning NewArrayNode.arrType  At NewArrayNode.java:[line 16]
M V EI2: new jadx.core.dex.instructions.NewArrayNode(ArgType, int) may expose internal representation by storing an externally mutable object into NewArrayNode.arrType  At NewArrayNode.java:[line 12]
M D NP: Possible null pointer dereference in jadx.gui.utils.codecache.disk.DiskCodeCache.reset() due to return value of called method  Dereferenced at DiskCodeCache.java:[line 95]
M V EI2: jadx.core.dex.instructions.SwitchInsn.attachSwitchData(SwitchData, int) may expose internal representation by storing an externally mutable object into SwitchInsn.switchData  At SwitchInsn.java:[line 41]
M V EI2: jadx.core.dex.instructions.SwitchInsn.replaceTargetBlock(BlockNode, BlockNode) may expose internal representation by storing an externally mutable object into SwitchInsn.defTargetBlock  At SwitchInsn.java:[line 74]
M V EI: jadx.core.dex.instructions.SwitchInsn.getTargetBlocks() may expose internal representation by returning SwitchInsn.targetBlocks  At SwitchInsn.java:[line 184]
M V EI: jadx.core.dex.instructions.SwitchInsn.getDefTargetBlock() may expose internal representation by returning SwitchInsn.defTargetBlock  At SwitchInsn.java:[line 188]
M B RR: jadx.gui.utils.codecache.disk.DiskCodeCache.loadNamesMap() ignores result of java.io.DataInputStream.skipBytes(int)  At DiskCodeCache.java:[line 256]
M B CT: Exception thrown in class jadx.gui.utils.codecache.disk.DiskCodeCache at new jadx.gui.utils.codecache.disk.DiskCodeCache(RootNode, Path) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At DiskCodeCache.java:[line 73]
M V EI2: new jadx.core.dex.nodes.utils.MethodUtils(RootNode) may expose internal representation by storing an externally mutable object into MethodUtils.root  At MethodUtils.java:[line 27]
M V EI2: new jadx.gui.ui.panel.LogcatPanel(JDebuggerPanel) may expose internal representation by storing an externally mutable object into LogcatPanel.debugPanel  At LogcatPanel.java:[line 75]
M B Se: Class jadx.gui.ui.panel.LogcatPanel defines non-transient non-serializable instance field logcatController  In LogcatPanel.java
M B Se: Class jadx.gui.ui.panel.LogcatPanel defines non-transient non-serializable instance field procs  In LogcatPanel.java
M D SF: Switch statement found in jadx.gui.ui.panel.ProgressPanel.propertyChange(PropertyChangeEvent) where default case is missing  At ProgressPanel.java:[lines 87-105]
M V EI2: new jadx.core.codegen.NameGen(MethodNode, ClassGen) may expose internal representation by storing an externally mutable object into NameGen.mth  At NameGen.java:[line 58]
M V EI2: new jadx.gui.ui.panel.IssuesPanel(MainWindow) may expose internal representation by storing an externally mutable object into IssuesPanel.mainWindow  At IssuesPanel.java:[line 33]
M V EI2: new jadx.gui.treemodel.JMethod(JavaMethod, JClass) may expose internal representation by storing an externally mutable object into JMethod.jParent  At JMethod.java:[line 37]
M V EI: jadx.gui.treemodel.JMethod.getJavaNode() may expose internal representation by returning JMethod.mth  At JMethod.java:[line 42]
M V EI2: new jadx.gui.treemodel.JMethod(JavaMethod, JClass) may expose internal representation by storing an externally mutable object into JMethod.mth  At JMethod.java:[line 36]
M V EI: jadx.gui.treemodel.JMethod.getJavaMethod() may expose internal representation by returning JMethod.mth  At JMethod.java:[line 46]
M V EI: jadx.gui.treemodel.JMethod.getJParent() may expose internal representation by returning JMethod.jParent  At JMethod.java:[line 51]
M V EI2: new jadx.core.dex.instructions.InvokeCustomRawNode(InvokeNode, MethodInfo, InsnData, boolean) may expose internal representation by storing an externally mutable object into InvokeCustomRawNode.resolve  At InvokeCustomRawNode.java:[line 31]
M V EI: jadx.core.dex.instructions.InvokeCustomRawNode.getResolveInvoke() may expose internal representation by returning InvokeCustomRawNode.resolve  At InvokeCustomRawNode.java:[line 40]
M V EI2: jadx.core.dex.instructions.InvokeCustomRawNode.setCallSiteValues(List) may expose internal representation by storing an externally mutable object into InvokeCustomRawNode.callSiteValues  At InvokeCustomRawNode.java:[line 44]
M V EI2: new jadx.core.dex.instructions.InvokeCustomRawNode(InvokeNode, MethodInfo, InvokeType, int) may expose internal representation by storing an externally mutable object into InvokeCustomRawNode.resolve  At InvokeCustomRawNode.java:[line 36]
M V EI: jadx.core.dex.instructions.InvokeCustomRawNode.getCallSiteValues() may expose internal representation by returning InvokeCustomRawNode.callSiteValues  At InvokeCustomRawNode.java:[line 48]
M V EI: jadx.gui.treemodel.JField.getJavaNode() may expose internal representation by returning JField.field  At JField.java:[line 39]
M V EI2: new jadx.gui.treemodel.JField(JavaField, JClass) may expose internal representation by storing an externally mutable object into JField.field  At JField.java:[line 29]
M V EI: jadx.gui.treemodel.JField.getJParent() may expose internal representation by returning JField.jParent  At JField.java:[line 44]
M V EI2: new jadx.gui.treemodel.JField(JavaField, JClass) may expose internal representation by storing an externally mutable object into JField.jParent  At JField.java:[line 30]
M V EI: jadx.gui.ui.codearea.JNodeAction.getCodeArea() may expose internal representation by returning JNodeAction.codeArea  At JNodeAction.java:[line 57]
M V EI2: new jadx.gui.ui.codearea.JNodeAction(String, CodeArea) may expose internal representation by storing an externally mutable object into JNodeAction.codeArea  At JNodeAction.java:[line 25]
M V EI2: jadx.gui.ui.codearea.JNodeAction.changeNode(JNode) may expose internal representation by storing an externally mutable object into JNodeAction.node  At JNodeAction.java:[line 52]
M D NP: Possible null pointer dereference in jadx.gui.treemodel.JVariable.makeLongStringHtml() due to return value of called method  Method invoked at JVariable.java:[line 61]
M V EI2: new jadx.gui.treemodel.JVariable(JMethod, JavaVariable) may expose internal representation by storing an externally mutable object into JVariable.jMth  At JVariable.java:[line 16]
M D NP: Possible null pointer dereference in new jadx.gui.search.providers.CommentSearchProvider$CodeCommentNode(JMethod, ICodeComment) due to return value of called method  Method invoked at CommentSearchProvider.java:[line 134]
M C NP: Possible null pointer dereference of JadxWrapper.decompiler in jadx.gui.JadxWrapper.getAllPlugins()  Dereferenced at JadxWrapper.java:[line 196]
M C NP: Possible null pointer dereference of JadxWrapper.decompiler in jadx.gui.JadxWrapper.close()  Dereferenced at JadxWrapper.java:[line 87]
M C NP: Possible null pointer dereference of JadxWrapper.decompiler in jadx.gui.JadxWrapper.getDecompiler()  Dereferenced at JadxWrapper.java:[line 208]
H C NP: jadx.gui.JadxWrapper.getDecompiler() may return null, but is declared @Nonnull  Returned at JadxWrapper.java:[line 211]
M C NP: Possible null pointer dereference of JadxWrapper.decompiler in jadx.gui.JadxWrapper.open()  Dereferenced at JadxWrapper.java:[line 65]
M V EI: jadx.gui.JadxWrapper.getDecompiler() may expose internal representation by returning JadxWrapper.decompiler  At JadxWrapper.java:[line 211]
M V EI2: new jadx.gui.JadxWrapper(MainWindow) may expose internal representation by storing an externally mutable object into JadxWrapper.mainWindow  At JadxWrapper.java:[line 52]
M V EI2: new jadx.gui.jobs.DecompileTask(JadxWrapper) may expose internal representation by storing an externally mutable object into DecompileTask.wrapper  At DecompileTask.java:[line 33]
M V EI: jadx.gui.treemodel.JPackage.getIcon() may expose internal representation by returning JPackage.PACKAGE_ICON  At JPackage.java:[line 113]
M V EI: jadx.gui.treemodel.JPackage.getClasses() may expose internal representation by returning JPackage.classes  At JPackage.java:[line 104]
M V EI2: jadx.gui.treemodel.JPackage.setInnerPackages(List) may expose internal representation by storing an externally mutable object into JPackage.innerPackages  At JPackage.java:[line 100]
M V EI2: jadx.gui.treemodel.JPackage.setClasses(List) may expose internal representation by storing an externally mutable object into JPackage.classes  At JPackage.java:[line 108]
M V EI: jadx.gui.treemodel.JPackage.getInnerPackages() may expose internal representation by returning JPackage.innerPackages  At JPackage.java:[line 96]
M V EI2: new jadx.gui.jobs.ExportTask(MainWindow, JadxWrapper, File) may expose internal representation by storing an externally mutable object into ExportTask.mainWindow  At ExportTask.java:[line 24]
M V EI2: new jadx.gui.jobs.ExportTask(MainWindow, JadxWrapper, File) may expose internal representation by storing an externally mutable object into ExportTask.wrapper  At ExportTask.java:[line 25]
M V EI2: new jadx.gui.treemodel.JSources(JRoot, JadxWrapper) may expose internal representation by storing an externally mutable object into JSources.wrapper  At JSources.java:[line 29]
M V EI: jadx.gui.treemodel.JSources.getIcon() may expose internal representation by returning JSources.ROOT_ICON  At JSources.java:[line 123]
M V EI2: new jadx.gui.ui.codearea.AbstractCodeArea(ContentPanel, JNode) may expose internal representation by storing an externally mutable object into AbstractCodeArea.node  At AbstractCodeArea.java:[line 80]
M V EI2: new jadx.gui.ui.codearea.AbstractCodeArea(ContentPanel, JNode) may expose internal representation by storing an externally mutable object into AbstractCodeArea.contentPanel  At AbstractCodeArea.java:[line 79]
M V EI: jadx.gui.ui.codearea.AbstractCodeArea.getContentPanel() may expose internal representation by returning AbstractCodeArea.contentPanel  At AbstractCodeArea.java:[line 345]
M V EI: jadx.gui.ui.codearea.AbstractCodeArea.getJClass() may expose internal representation by returning AbstractCodeArea.node  At AbstractCodeArea.java:[line 355]
M V EI: jadx.gui.ui.codearea.AbstractCodeArea.getNode() may expose internal representation by returning AbstractCodeArea.node  At AbstractCodeArea.java:[line 349]
M V EI2: new jadx.core.codegen.InsnGen(MethodGen, boolean) may expose internal representation by storing an externally mutable object into InsnGen.mgen  At InsnGen.java:[line 83]
M D SF: Switch statement found in jadx.core.codegen.InsnGen.makeInvoke(InvokeNode, ICodeWriter) where default case is missing  At InsnGen.java:[lines 812-835]
M D RCN: Redundant nullcheck of jadx.gui.ui.codearea.LineNumbers.visibleRect, which is known to be non-null in jadx.gui.ui.codearea.LineNumbers.paintComponent(Graphics)  Redundant null check at LineNumbers.java:[line 123]
M V EI2: new jadx.gui.ui.codearea.LineNumbers(AbstractCodeArea) may expose internal representation by storing an externally mutable object into LineNumbers.codeArea  At LineNumbers.java:[line 61]
M V EI2: new jadx.gui.utils.CaretPositionFix(AbstractCodeArea) may expose internal representation by storing an externally mutable object into CaretPositionFix.codeArea  At CaretPositionFix.java:[line 38]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_CLASS  At JClass.java:[line 150]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_CLASS_PRIVATE  At JClass.java:[line 145]
M V EI2: new jadx.gui.treemodel.JClass(JavaClass, JClass) may expose internal representation by storing an externally mutable object into JClass.jParent  At JClass.java:[line 47]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_INTERFACE  At JClass.java:[line 136]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_CLASS_ABSTRACT  At JClass.java:[line 139]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_CLASS_PUBLIC  At JClass.java:[line 148]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_ENUM  At JClass.java:[line 130]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_ANNOTATION  At JClass.java:[line 133]
M V EI2: new jadx.gui.treemodel.JClass(JavaClass) may expose internal representation by storing an externally mutable object into JClass.cls  At JClass.java:[line 40]
M V EI: jadx.gui.treemodel.JClass.getCls() may expose internal representation by returning JClass.cls  At JClass.java:[line 52]
M V EI: jadx.gui.treemodel.JClass.getIcon() may expose internal representation by returning JClass.ICON_CLASS_PROTECTED  At JClass.java:[line 142]
M V EI: jadx.gui.treemodel.JClass.getJavaNode() may expose internal representation by returning JClass.cls  At JClass.java:[line 155]
M V EI2: new jadx.gui.treemodel.JClass(JavaClass, JClass) may expose internal representation by storing an externally mutable object into JClass.cls  At JClass.java:[line 46]
M V EI: jadx.gui.treemodel.JClass.getJParent() may expose internal representation by returning JClass.jParent  At JClass.java:[line 160]
M V EI: jadx.gui.ui.panel.ContentPanel.getNode() may expose internal representation by returning ContentPanel.node  At ContentPanel.java:[line 30]
M V EI: jadx.gui.ui.panel.ContentPanel.getTabbedPane() may expose internal representation by returning ContentPanel.tabbedPane  At ContentPanel.java:[line 26]
M V EI2: new jadx.gui.ui.codearea.mode.JCodeMode(JClass, DecompilationMode) may expose internal representation by storing an externally mutable object into JCodeMode.jCls  At JCodeMode.java:[line 22]
M V EI: jadx.gui.ui.TabbedPane.getOpenTabs() may expose internal representation by returning TabbedPane.openTabs  At TabbedPane.java:[line 384]
M V EI: jadx.gui.ui.TabbedPane.getMainWindow() may expose internal representation by returning TabbedPane.mainWindow  At TabbedPane.java:[line 194]
M V EI: jadx.gui.ui.panel.JDebuggerPanel.getDbgController() may expose internal representation by returning JDebuggerPanel.controller  At JDebuggerPanel.java:[line 405]
M V EI: jadx.gui.ui.panel.JDebuggerPanel.getMainWindow() may expose internal representation by returning JDebuggerPanel.mainWindow  At JDebuggerPanel.java:[line 190]
M V EI2: new jadx.gui.ui.panel.JDebuggerPanel(MainWindow) may expose internal representation by storing an externally mutable object into JDebuggerPanel.mainWindow  At JDebuggerPanel.java:[line 91]
M V EI2: new jadx.core.codegen.AnnotationGen(ClassNode, ClassGen) may expose internal representation by storing an externally mutable object into AnnotationGen.cls  At AnnotationGen.java:[line 35]
M V EI2: new jadx.core.codegen.AnnotationGen(ClassNode, ClassGen) may expose internal representation by storing an externally mutable object into AnnotationGen.classGen  At AnnotationGen.java:[line 36]
M V EI2: new jadx.core.codegen.SimpleModeHelper(MethodNode) may expose internal representation by storing an externally mutable object into SimpleModeHelper.mth  At SimpleModeHelper.java:[line 31]
M D NP: Possible null pointer dereference in jadx.gui.ui.MainWindow.openSingleFile(Path, Runnable) due to return value of called method  Dereferenced at MainWindow.java:[line 429]
M D NP: Possible null pointer dereference in jadx.core.codegen.MethodGen.addFallbackMethodCode(ICodeWriter, MethodGen$FallbackOption) due to return value of called method  Method invoked at MethodGen.java:[line 424]
M V EI: jadx.core.codegen.MethodGen.getClassGen() may expose internal representation by returning MethodGen.classGen  At MethodGen.java:[line 70]
M V EI2: new jadx.core.codegen.MethodGen(ClassGen, MethodNode) may expose internal representation by storing an externally mutable object into MethodGen.mth  At MethodGen.java:[line 63]
M V EI: jadx.core.codegen.MethodGen.getNameGen() may expose internal representation by returning MethodGen.nameGen  At MethodGen.java:[line 74]
M V EI: jadx.core.codegen.MethodGen.getMethodNode() may expose internal representation by returning MethodGen.mth  At MethodGen.java:[line 78]
M V EI2: new jadx.core.codegen.MethodGen(ClassGen, MethodNode) may expose internal representation by storing an externally mutable object into MethodGen.classGen  At MethodGen.java:[line 64]
M D NP: Possible null pointer dereference in jadx.gui.ui.MainWindow.saveProjectAs() due to return value of called method  Dereferenced at MainWindow.java:[line 365]
H P Dm: jadx.gui.ui.MainWindow.closeAll() forces garbage collection; extremely dubious except in benchmarking code  At MainWindow.java:[line 508]
H P Dm: jadx.gui.ui.MainWindow.waitDecompileTask() forces garbage collection; extremely dubious except in benchmarking code  At MainWindow.java:[line 628]
M B Dm: jadx.gui.ui.MainWindow.closeWindow() invokes System.exit(...), which shuts down the entire virtual machine  At MainWindow.java:[line 1514]
M V EI2: new jadx.gui.ui.MainWindow(JadxSettings) may expose internal representation by storing an externally mutable object into MainWindow.settings  At MainWindow.java:[line 224]
M V EI: jadx.gui.ui.MainWindow.getWrapper() may expose internal representation by returning MainWindow.wrapper  At MainWindow.java:[line 1566]
M V EI: jadx.gui.ui.MainWindow.getTabbedPane() may expose internal representation by returning MainWindow.tabbedPane  At MainWindow.java:[line 1574]
M V EI2: jadx.gui.ui.MainWindow.updateProject(JadxProject) may expose internal representation by storing an externally mutable object into MainWindow.project  At MainWindow.java:[line 585]
M V EI: jadx.gui.ui.MainWindow.getSettings() may expose internal representation by returning MainWindow.settings  At MainWindow.java:[line 1578]
M V EI: jadx.gui.ui.MainWindow.getProject() may expose internal representation by returning MainWindow.project  At MainWindow.java:[line 1570]
M V EI: jadx.gui.ui.MainWindow.getTreeRoot() may expose internal representation by returning MainWindow.treeRoot  At MainWindow.java:[line 1590]
M V EI: jadx.gui.ui.MainWindow.getDebuggerPanel() may expose internal representation by returning MainWindow.debuggerPanel  At MainWindow.java:[line 1595]
M V EI: jadx.gui.ui.MainWindow.getCacheObject() may expose internal representation by returning MainWindow.cacheObject  At MainWindow.java:[line 1582]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getMergedBlocks() may expose internal representation by returning IfInfo.mergedBlocks  At IfInfo.java:[line 71]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getSkipBlocks() may expose internal representation by returning IfInfo.skipBlocks  At IfInfo.java:[line 75]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getCondition() may expose internal representation by returning IfInfo.condition  At IfInfo.java:[line 67]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getElseBlock() may expose internal representation by returning IfInfo.elseBlock  At IfInfo.java:[line 83]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getOutBlock() may expose internal representation by returning IfInfo.outBlock  At IfInfo.java:[line 87]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getForceInlineInsns() may expose internal representation by returning IfInfo.forceInlineInsns  At IfInfo.java:[line 95]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getMth() may expose internal representation by returning IfInfo.mth  At IfInfo.java:[line 63]
M V EI: jadx.core.dex.regions.conditions.IfInfo.getThenBlock() may expose internal representation by returning IfInfo.thenBlock  At IfInfo.java:[line 79]
M V EI2: jadx.core.dex.regions.conditions.IfInfo.setOutBlock(BlockNode) may expose internal representation by storing an externally mutable object into IfInfo.outBlock  At IfInfo.java:[line 91]
M D SF: Switch statement found in jadx.gui.ui.MainWindow.processDecompilationResults(ProcessResult) where default case is missing  At MainWindow.java:[lines 642-657]
M D SF: Switch statement found in jadx.gui.ui.MainWindow.lambda$registerMouseNavigationButtons$14(AWTEvent) where default case is missing  At MainWindow.java:[lines 1382-1387]
M B Se: Class jadx.gui.ui.MainWindow defines non-transient non-serializable instance field liveReloadWorker  In MainWindow.java
M B Se: Class jadx.gui.ui.MainWindow defines non-transient non-serializable instance field loadListeners  In MainWindow.java
M V EI: jadx.core.dex.regions.conditions.ConditionRegion.getConditionBlocks() may expose internal representation by returning ConditionRegion.conditionBlocks  At ConditionRegion.java:[line 33]
M V EI2: jadx.core.dex.regions.conditions.ConditionRegion.updateCondition(IfCondition, List) may expose internal representation by storing an externally mutable object into ConditionRegion.condition  At ConditionRegion.java:[line 79]
M V EI2: jadx.core.dex.regions.conditions.ConditionRegion.updateCondition(IfCondition, List) may expose internal representation by storing an externally mutable object into ConditionRegion.conditionBlocks  At ConditionRegion.java:[line 80]
M V EI: jadx.core.dex.regions.conditions.ConditionRegion.getCondition() may expose internal representation by returning ConditionRegion.condition  At ConditionRegion.java:[line 28]
M V EI2: new jadx.core.dex.attributes.nodes.ClassTypeVarsAttr(List, Map) may expose internal representation by storing an externally mutable object into ClassTypeVarsAttr.typeVars  At ClassTypeVarsAttr.java:[line 26]
M V EI: jadx.core.dex.attributes.nodes.ClassTypeVarsAttr.getTypeVars() may expose internal representation by returning ClassTypeVarsAttr.typeVars  At ClassTypeVarsAttr.java:[line 31]
M V EI2: new jadx.core.dex.attributes.nodes.ClassTypeVarsAttr(List, Map) may expose internal representation by storing an externally mutable object into ClassTypeVarsAttr.superTypeMaps  At ClassTypeVarsAttr.java:[line 27]
M V EI2: new jadx.core.codegen.json.JsonCodeGen(ClassNode) may expose internal representation by storing an externally mutable object into JsonCodeGen.cls  At JsonCodeGen.java:[line 52]
M D NP: Possible null pointer dereference in jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(MethodNode, BlockNode, InsnList, List, ArgsInfo, RegisterArg) due to return value of called method  Dereferenced at CodeShrinkVisitor.java:[line 84]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeCompare(RootNode) may expose internal representation by storing an externally mutable object into TypeCompare.root  At TypeCompare.java:[line 37]
M D NP: Possible null pointer dereference in jadx.core.deobf.DeobfPresets.getPathDeobfMapPath(RootNode) due to return value of called method  Dereferenced at DeobfPresets.java:[line 56]
M V EI: jadx.core.deobf.DeobfPresets.getClsPresetMap() may expose internal representation by returning DeobfPresets.clsPresetMap  At DeobfPresets.java:[line 179]
M V EI: jadx.core.deobf.DeobfPresets.getMthPresetMap() may expose internal representation by returning DeobfPresets.mthPresetMap  At DeobfPresets.java:[line 187]
M V EI: jadx.core.deobf.DeobfPresets.getPkgPresetMap() may expose internal representation by returning DeobfPresets.pkgPresetMap  At DeobfPresets.java:[line 175]
M V EI: jadx.core.deobf.DeobfPresets.getFldPresetMap() may expose internal representation by returning DeobfPresets.fldPresetMap  At DeobfPresets.java:[line 183]
M V EI2: new jadx.gui.search.providers.BaseSearchProvider(MainWindow, SearchSettings, List) may expose internal representation by storing an externally mutable object into BaseSearchProvider.classes  At BaseSearchProvider.java:[line 26]
M V EI: jadx.gui.ui.panel.HtmlPanel.getHtmlArea() may expose internal representation by returning HtmlPanel.textArea  At HtmlPanel.java:[line 42]
M V EI: jadx.core.dex.visitors.typeinference.TypeUpdateInfo.getMth() may expose internal representation by returning TypeUpdateInfo.mth  At TypeUpdateInfo.java:[line 66]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeUpdateInfo(MethodNode, TypeUpdateFlags) may expose internal representation by storing an externally mutable object into TypeUpdateInfo.mth  At TypeUpdateInfo.java:[line 18]
M V EI: jadx.core.dex.visitors.typeinference.TypeUpdateInfo.getUpdates() may expose internal representation by returning TypeUpdateInfo.updates  At TypeUpdateInfo.java:[line 70]
M V EI2: new jadx.core.dex.visitors.ssa.LiveVarAnalysis(MethodNode) may expose internal representation by storing an externally mutable object into LiveVarAnalysis.mth  At LiveVarAnalysis.java:[line 27]
M V EI: jadx.gui.search.SearchTask.scheduleJobs() may expose internal representation by returning SearchTask.jobs  At SearchTask.java:[line 102]
M V EI: jadx.api.JavaClass.getInlinedClasses() may expose internal representation by returning JavaClass.inlinedClasses  At JavaClass.java:[line 299]
M V EI: jadx.api.JavaClass.getFields() may expose internal representation by returning JavaClass.fields  At JavaClass.java:[line 304]
M V EI: jadx.api.JavaClass.getDeclaringClass() may expose internal representation by returning JavaClass.parent  At JavaClass.java:[line 252]
M V EI: jadx.api.JavaClass.getMethods() may expose internal representation by returning JavaClass.methods  At JavaClass.java:[line 309]
M V EI: jadx.api.JavaClass.getCodeParent() may expose internal representation by returning JavaClass.parent  At JavaClass.java:[line 285]
M V EI: jadx.api.JavaClass.getClassNode() may expose internal representation by returning JavaClass.cls  At JavaClass.java:[line 107]
M V EI: jadx.api.JavaClass.getInnerClasses() may expose internal representation by returning JavaClass.innerClasses  At JavaClass.java:[line 294]
M V EI2: new jadx.gui.plugins.jadxecute.JadxecuteDialog(MainWindow) may expose internal representation by storing an externally mutable object into JadxecuteDialog.mainWindow  At JadxecuteDialog.java:[line 54]
M V EI2: new jadx.core.dex.nodes.utils.TypeUtils(RootNode) may expose internal representation by storing an externally mutable object into TypeUtils.root  At TypeUtils.java:[line 35]
H I Dm: Found reliance on default encoding in jadx.gui.plugins.jadxecute.JadxecuteDialog.addCodeExamplesList(): new java.io.InputStreamReader(InputStream)  At JadxecuteDialog.java:[line 240]
H I Dm: Found reliance on default encoding in jadx.gui.plugins.jadxecute.JadxecuteDialog.lambda$initFilePanel$3(JTextField, RSyntaxTextArea, ActionEvent): new java.io.FileReader(File)  At JadxecuteDialog.java:[line 217]
M V EI: jadx.core.dex.attributes.nodes.MethodInlineAttr.getArgsRegNums() may expose internal representation by returning MethodInlineAttr.argsRegNums  At MethodInlineAttr.java:[line 57]
M V EI: jadx.core.dex.attributes.nodes.MethodInlineAttr.getInsn() may expose internal representation by returning MethodInlineAttr.insn  At MethodInlineAttr.java:[line 53]
M B NP: jadx.core.dex.visitors.typeinference.TypeUpdate.lambda$checkType$4(Set, ArgType) has Boolean return type and returns explicit null  At TypeUpdate.java:[line 400]
M V EI: jadx.core.dex.visitors.typeinference.TypeUpdate.getTypeCompare() may expose internal representation by returning TypeUpdate.comparator  At TypeUpdate.java:[line 611]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeUpdate(RootNode) may expose internal representation by storing an externally mutable object into TypeUpdate.root  At TypeUpdate.java:[line 46]
M V EI2: new jadx.gui.ui.dialog.ADBDialog(MainWindow) may expose internal representation by storing an externally mutable object into ADBDialog.mainWindow  At ADBDialog.java:[line 77]
M B Se: Class jadx.gui.ui.dialog.ADBDialog defines non-transient non-serializable instance field deviceSocket  In ADBDialog.java
M C NP: Possible null pointer dereference of LoopRegion.preCondition in jadx.core.dex.regions.loops.LoopRegion.checkPreCondition()  Dereferenced at LoopRegion.java:[line 79]
M V EI: jadx.core.dex.regions.loops.LoopRegion.getBody() may expose internal representation by returning LoopRegion.body  At LoopRegion.java:[line 57]
M V EI2: jadx.core.dex.regions.loops.LoopRegion.setBody(IRegion) may expose internal representation by storing an externally mutable object into LoopRegion.body  At LoopRegion.java:[line 61]
M V EI2: jadx.core.dex.regions.loops.LoopRegion.setPreCondition(BlockNode) may expose internal representation by storing an externally mutable object into LoopRegion.preCondition  At LoopRegion.java:[line 72]
M V EI2: new jadx.core.dex.regions.loops.LoopRegion(IRegion, LoopInfo, BlockNode, boolean) may expose internal representation by storing an externally mutable object into LoopRegion.header  At LoopRegion.java:[line 36]
M V EI2: new jadx.core.dex.regions.loops.LoopRegion(IRegion, LoopInfo, BlockNode, boolean) may expose internal representation by storing an externally mutable object into LoopRegion.info  At LoopRegion.java:[line 35]
M V EI: jadx.core.dex.regions.loops.LoopRegion.getHeader() may expose internal representation by returning LoopRegion.header  At LoopRegion.java:[line 49]
M V EI: jadx.core.dex.regions.loops.LoopRegion.getInfo() may expose internal representation by returning LoopRegion.info  At LoopRegion.java:[line 44]
M V EI: jadx.gui.plugins.quark.QuarkReportNode.getIcon() may expose internal representation by returning QuarkReportNode.ICON  At QuarkReportNode.java:[line 52]
M B Se: jadx.api.impl.SimpleCodeInfo stored into non-transient field QuarkReportNode.errorContent  At QuarkReportNode.java:[line 81]
M V EI2: new jadx.core.dex.visitors.usage.UsageInfo(RootNode) may expose internal representation by storing an externally mutable object into UsageInfo.root  At UsageInfo.java:[line 27]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.XML_ICON  At JResource.java:[line 257]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.ROOT_ICON  At JResource.java:[line 245]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.FILE_ICON  At JResource.java:[line 269]
M V EI: jadx.gui.treemodel.JResource.getResFile() may expose internal representation by returning JResource.resFile  At JResource.java:[line 291]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.IMAGE_ICON  At JResource.java:[line 259]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.FOLDER_ICON  At JResource.java:[line 247]
M V EI2: new jadx.gui.treemodel.JResource(ResourceFile, String, String, JResource$JResType) may expose internal representation by storing an externally mutable object into JResource.resFile  At JResource.java:[line 69]
M V EI: jadx.gui.treemodel.JResource.getSubNodes() may expose internal representation by returning JResource.subNodes  At JResource.java:[line 109]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.ARSC_ICON  At JResource.java:[line 255]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.JAVA_ICON  At JResource.java:[line 263]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.UNKNOWN_ICON  At JResource.java:[line 265]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.MANIFEST_ICON  At JResource.java:[line 253]
M V EI: jadx.gui.treemodel.JResource.getIcon() may expose internal representation by returning JResource.SO_ICON  At JResource.java:[line 261]
M V EI: jadx.core.dex.attributes.nodes.EdgeInsnAttr.getInsn() may expose internal representation by returning EdgeInsnAttr.insn  At EdgeInsnAttr.java:[line 52]
M V EI: jadx.core.dex.attributes.nodes.EdgeInsnAttr.getEnd() may expose internal representation by returning EdgeInsnAttr.end  At EdgeInsnAttr.java:[line 48]
M V EI: jadx.core.dex.attributes.nodes.EdgeInsnAttr.getStart() may expose internal representation by returning EdgeInsnAttr.start  At EdgeInsnAttr.java:[line 44]
M V EI: jadx.gui.treemodel.JResSearchNode.getResNode() may expose internal representation by returning JResSearchNode.resNode  At JResSearchNode.java:[line 20]
M V EI2: new jadx.gui.treemodel.JResSearchNode(JResource, String, int) may expose internal representation by storing an externally mutable object into JResSearchNode.resNode  At JResSearchNode.java:[line 16]
M D NP: Possible null pointer dereference in jadx.core.dex.regions.loops.ForEachLoop.injectFakeInsns(LoopRegion) due to return value of called method  Dereferenced at ForEachLoop.java:[line 30]
M V EI2: new jadx.gui.ui.dialog.CommonSearchDialog(MainWindow, String) may expose internal representation by storing an externally mutable object into CommonSearchDialog.mainWindow  At CommonSearchDialog.java:[line 82]
M V EI2: new jadx.core.export.ExportGradleProject(RootNode, File, ResourceFile, ResContainer) may expose internal representation by storing an externally mutable object into ExportGradleProject.root  At ExportGradleProject.java:[line 44]
M D NP: Possible null pointer dereference in jadx.gui.treemodel.JRoot.makeString() due to return value of called method  Dereferenced at JRoot.java:[line 143]
M V EI: jadx.core.dex.visitors.finaly.InsnsSlice.getInsnsList() may expose internal representation by returning InsnsSlice.insnsList  At InsnsSlice.java:[line 45]
M V EI: jadx.gui.treemodel.JRoot.getIcon() may expose internal representation by returning JRoot.ROOT_ICON  At JRoot.java:[line 127]
M V EI: jadx.gui.treemodel.JRoot.getCustomNodes() may expose internal representation by returning JRoot.customNodes  At JRoot.java:[line 122]
M V EI2: new jadx.gui.treemodel.JRoot(JadxWrapper) may expose internal representation by storing an externally mutable object into JRoot.wrapper  At JRoot.java:[line 33]
M V EI2: new jadx.core.xmlgen.ProtoXMLParser(RootNode) may expose internal representation by storing an externally mutable object into ProtoXMLParser.rootNode  At ProtoXMLParser.java:[line 31]
M V EI2: new jadx.gui.search.providers.ResourceSearchProvider(MainWindow, SearchSettings) may expose internal representation by storing an externally mutable object into ResourceSearchProvider.searchSettings  At ResourceSearchProvider.java:[line 43]
M V EI2: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.setConstraints(List) may expose internal representation by storing an externally mutable object into TypeSearchVarInfo.constraints  At TypeSearchVarInfo.java:[line 83]
M V EI2: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.setCandidateTypes(List) may expose internal representation by storing an externally mutable object into TypeSearchVarInfo.candidateTypes  At TypeSearchVarInfo.java:[line 75]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeSearchVarInfo(SSAVar) may expose internal representation by storing an externally mutable object into TypeSearchVarInfo.var  At TypeSearchVarInfo.java:[line 18]
M V EI: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.getCandidateTypes() may expose internal representation by returning TypeSearchVarInfo.candidateTypes  At TypeSearchVarInfo.java:[line 71]
M V EI2: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.setCurrentType(ArgType) may expose internal representation by storing an externally mutable object into TypeSearchVarInfo.currentType  At TypeSearchVarInfo.java:[line 67]
M V EI: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.getConstraints() may expose internal representation by returning TypeSearchVarInfo.constraints  At TypeSearchVarInfo.java:[line 79]
M V EI2: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.markResolved(ArgType) may expose internal representation by storing an externally mutable object into TypeSearchVarInfo.currentType  At TypeSearchVarInfo.java:[line 22]
M V EI: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.getCurrentType() may expose internal representation by returning TypeSearchVarInfo.currentType  At TypeSearchVarInfo.java:[line 63]
M V EI: jadx.core.dex.visitors.typeinference.TypeSearchVarInfo.getVar() may expose internal representation by returning TypeSearchVarInfo.var  At TypeSearchVarInfo.java:[line 51]
M D NP: Possible null pointer dereference in jadx.gui.settings.JadxProject.setProjectPath(Path) due to return value of called method  Dereferenced at JadxProject.java:[line 81]
M D NP: Possible null pointer dereference in jadx.gui.settings.JadxProject.load(MainWindow, Path) due to return value of called method  Method invoked at JadxProject.java:[line 270]
M D NP: Possible null pointer dereference in jadx.gui.settings.JadxProject.save() due to return value of called method  Method invoked at JadxProject.java:[line 258]
M V EI2: new jadx.gui.settings.JadxProject(MainWindow) may expose internal representation by storing an externally mutable object into JadxProject.mainWindow  At JadxProject.java:[line 59]
M V EI: jadx.core.dex.visitors.methods.MutableMethodDetails.getMethodInfo() may expose internal representation by returning MutableMethodDetails.mthInfo  At MutableMethodDetails.java:[line 32]
M V EI2: jadx.core.dex.visitors.methods.MutableMethodDetails.setArgTypes(List) may expose internal representation by storing an externally mutable object into MutableMethodDetails.argTypes  At MutableMethodDetails.java:[line 65]
M V EI: jadx.core.dex.visitors.methods.MutableMethodDetails.getThrows() may expose internal representation by returning MutableMethodDetails.throwTypes  At MutableMethodDetails.java:[line 52]
M V EI2: jadx.core.dex.visitors.methods.MutableMethodDetails.setRetType(ArgType) may expose internal representation by storing an externally mutable object into MutableMethodDetails.retType  At MutableMethodDetails.java:[line 61]
M V EI2: jadx.core.dex.visitors.methods.MutableMethodDetails.setThrowTypes(List) may expose internal representation by storing an externally mutable object into MutableMethodDetails.throwTypes  At MutableMethodDetails.java:[line 73]
M V EI: jadx.core.dex.visitors.methods.MutableMethodDetails.getArgTypes() may expose internal representation by returning MutableMethodDetails.argTypes  At MutableMethodDetails.java:[line 42]
M V EI: jadx.core.dex.visitors.methods.MutableMethodDetails.getReturnType() may expose internal representation by returning MutableMethodDetails.retType  At MutableMethodDetails.java:[line 37]
M V EI: jadx.core.dex.visitors.methods.MutableMethodDetails.getTypeParameters() may expose internal representation by returning MutableMethodDetails.typeParams  At MutableMethodDetails.java:[line 47]
M V EI2: jadx.core.dex.visitors.methods.MutableMethodDetails.setTypeParams(List) may expose internal representation by storing an externally mutable object into MutableMethodDetails.typeParams  At MutableMethodDetails.java:[line 69]
M V EI2: new jadx.gui.search.providers.CommentSearchProvider(MainWindow, SearchSettings) may expose internal representation by storing an externally mutable object into CommentSearchProvider.searchSettings  At CommentSearchProvider.java:[line 49]
H I Dm: Found reliance on default encoding in jadx.core.codegen.json.JsonMappingGen.dump(RootNode): new java.io.FileWriter(File)  At JsonMappingGen.java:[line 47]
M V EI2: new jadx.core.xmlgen.BinaryXMLParser(RootNode) may expose internal representation by storing an externally mutable object into BinaryXMLParser.rootNode  At BinaryXMLParser.java:[line 63]
H P Dm: jadx.gui.ui.dialog.SearchDialog.unloadTempData() forces garbage collection; extremely dubious except in benchmarking code  At SearchDialog.java:[line 615]
H D UCF: Useless control flow to next line in jadx.core.xmlgen.BinaryXMLParser.parseElement()  At BinaryXMLParser.java:[line 281]
M B Se: Class jadx.gui.ui.dialog.SearchDialog defines non-transient non-serializable instance field searchBackgroundExecutor  In SearchDialog.java
M D DLS: Dead store to v in jadx.core.xmlgen.BinaryXMLParser.isBinaryXml()  At BinaryXMLParser.java:[line 91]
M D DLS: Dead store to attributeRawValue in jadx.core.xmlgen.BinaryXMLParser.parseAttribute(int, boolean)  At BinaryXMLParser.java:[line 290]
M B CT: Exception thrown in class jadx.core.xmlgen.BinaryXMLParser at new jadx.core.xmlgen.BinaryXMLParser(RootNode) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks.  At BinaryXMLParser.java:[line 68]
M V EI2: new jadx.core.utils.BlockInsnPair(BlockNode, InsnNode) may expose internal representation by storing an externally mutable object into BlockInsnPair.insn  At BlockInsnPair.java:[line 14]
M V EI: jadx.core.utils.BlockInsnPair.getInsn() may expose internal representation by returning BlockInsnPair.insn  At BlockInsnPair.java:[line 22]
M V EI2: new jadx.core.utils.BlockInsnPair(BlockNode, InsnNode) may expose internal representation by storing an externally mutable object into BlockInsnPair.block  At BlockInsnPair.java:[line 13]
M V EI: jadx.core.utils.BlockInsnPair.getBlock() may expose internal representation by returning BlockInsnPair.block  At BlockInsnPair.java:[line 18]
M V EI: jadx.core.dex.regions.SynchronizedRegion.getExitInsns() may expose internal representation by returning SynchronizedRegion.exitInsns  At SynchronizedRegion.java:[line 30]
M V EI: jadx.core.dex.regions.SynchronizedRegion.getEnterInsn() may expose internal representation by returning SynchronizedRegion.enterInsn  At SynchronizedRegion.java:[line 26]
M V EI2: new jadx.core.dex.regions.SynchronizedRegion(IRegion, InsnNode) may expose internal representation by storing an externally mutable object into SynchronizedRegion.enterInsn  At SynchronizedRegion.java:[line 21]
M V EI: jadx.core.dex.regions.SynchronizedRegion.getRegion() may expose internal representation by returning SynchronizedRegion.region  At SynchronizedRegion.java:[line 34]
M V EI: jadx.gui.ui.codearea.CodePanel.getSearchBar() may expose internal representation by returning CodePanel.searchBar  At CodePanel.java:[line 171]
M V EI2: new jadx.gui.ui.codearea.CodePanel(AbstractCodeArea) may expose internal representation by storing an externally mutable object into CodePanel.codeArea  At CodePanel.java:[line 52]
M V EI: jadx.gui.ui.codearea.CodePanel.getCodeScrollPane() may expose internal representation by returning CodePanel.codeScrollPane  At CodePanel.java:[line 179]
M V EI: jadx.gui.ui.codearea.CodePanel.getCodeArea() may expose internal representation by returning CodePanel.codeArea  At CodePanel.java:[line 175]
M D SF: Switch statement found in jadx.gui.ui.codearea.CodePanel.initLineNumbers() where default case is missing  At CodePanel.java:[lines 140-152]
M V EI2: new jadx.gui.ui.codearea.JNodePopupBuilder(CodeArea, JPopupMenu) may expose internal representation by storing an externally mutable object into JNodePopupBuilder.menu  At JNodePopupBuilder.java:[line 12]
M V EI: jadx.gui.ui.codearea.JNodePopupBuilder.getMenu() may expose internal representation by returning JNodePopupBuilder.menu  At JNodePopupBuilder.java:[line 34]
M V EI: jadx.gui.ui.codearea.SmaliArea.getNode() may expose internal representation by returning SmaliArea.textNode  At SmaliArea.java:[line 112]
M V EI: jadx.gui.ui.codearea.SmaliArea.getJClass() may expose internal representation by returning AbstractCodeArea.node  At SmaliArea.java:[line 116]
M D BC: Unchecked/unconfirmed cast from org.fife.ui.rtextarea.RTextArea to org.fife.ui.rsyntaxtextarea.RSyntaxTextArea in jadx.gui.ui.codearea.SmaliArea$2$1.createIconRowHeader(RTextArea)  At SmaliArea.java:[line 425]
M V EI2: new jadx.gui.ui.codearea.JNodePopupListener(CodeArea) may expose internal representation by storing an externally mutable object into JNodePopupListener.codeArea  At JNodePopupListener.java:[line 16]
M V EI2: new jadx.gui.plugins.quark.QuarkManager(MainWindow, Path) may expose internal representation by storing an externally mutable object into QuarkManager.mainWindow  At QuarkManager.java:[line 39]
H I Dm: Found reliance on default encoding in jadx.gui.plugins.quark.QuarkManager.runCommand(List): new java.io.InputStreamReader(InputStream)  At QuarkManager.java:[line 205]
M D NP: Possible null pointer dereference in jadx.core.deobf.Deobfuscator.makeClsPrefix(ClassNode) due to return value of called method  Method invoked at Deobfuscator.java:[line 474]
M D NP: Possible null pointer dereference in jadx.core.deobf.Deobfuscator.makeClsPrefix(ClassNode) due to return value of called method  Dereferenced at Deobfuscator.java:[line 441]
M V EI2: new jadx.gui.plugins.quark.QuarkDialog(MainWindow) may expose internal representation by storing an externally mutable object into QuarkDialog.mainWindow  At QuarkDialog.java:[line 38]
M B Se: Class jadx.gui.plugins.quark.QuarkDialog defines non-transient non-serializable instance field files  In QuarkDialog.java
H C NP: Null passed for non-null parameter of java.nio.file.Files.newBufferedReader(Path, Charset) in jadx.gui.device.debugger.BreakpointManager.init(Path)  Method invoked at BreakpointManager.java:[line 55]
M C NP: Null passed for non-null parameter of java.nio.file.Files.write(Path, byte[], OpenOption[]) in jadx.gui.device.debugger.BreakpointManager.sync()  Method invoked at BreakpointManager.java:[line 151]
M V EI: jadx.core.deobf.Deobfuscator.getFldMap() may expose internal representation by returning Deobfuscator.fldMap  At Deobfuscator.java:[line 663]
M V EI2: new jadx.core.deobf.Deobfuscator(RootNode) may expose internal representation by storing an externally mutable object into Deobfuscator.root  At Deobfuscator.java:[line 68]
M V EI: jadx.core.deobf.Deobfuscator.getClsMap() may expose internal representation by returning Deobfuscator.clsMap  At Deobfuscator.java:[line 659]
M V EI: jadx.core.deobf.Deobfuscator.getMthMap() may expose internal representation by returning Deobfuscator.mthMap  At Deobfuscator.java:[line 667]
M V EI: jadx.core.deobf.Deobfuscator.getRootPackage() may expose internal representation by returning Deobfuscator.rootPackage  At Deobfuscator.java:[line 671]
M P SBSC: jadx.core.deobf.Deobfuscator.makeClsPrefix(ClassNode) concatenates strings using + in a loop  At Deobfuscator.java:[line 467]
M V EI: jadx.gui.treemodel.ApkSignature.getIcon() may expose internal representation by returning ApkSignature.CERTIFICATE_ICON  At ApkSignature.java:[line 72]
M B Se: Class jadx.gui.treemodel.ApkSignature defines non-transient non-serializable instance field content  In ApkSignature.java
M B Se: jadx.api.impl.SimpleCodeInfo stored into non-transient field ApkSignature.content  At ApkSignature.java:[line 170]
M V EI: jadx.api.JavaMethod.getDeclaringClass() may expose internal representation by returning JavaMethod.parent  At JavaMethod.java:[line 43]
M V EI: jadx.api.JavaMethod.getMethodNode() may expose internal representation by returning JavaMethod.mth  At JavaMethod.java:[line 124]
M V EI2: jadx.core.dex.regions.TryCatchRegion.setTryCatchBlock(TryCatchBlockAttr) may expose internal representation by storing an externally mutable object into TryCatchRegion.tryCatchBlock  At TryCatchRegion.java:[line 32]
M V EI: jadx.core.dex.regions.TryCatchRegion.getTryCatchBlock() may expose internal representation by returning TryCatchRegion.tryCatchBlock  At TryCatchRegion.java:[line 56]
M V EI: jadx.core.dex.regions.TryCatchRegion.getCatchRegions() may expose internal representation by returning TryCatchRegion.catchRegions  At TryCatchRegion.java:[line 52]
M V EI2: new jadx.core.dex.regions.SwitchRegion(IRegion, BlockNode) may expose internal representation by storing an externally mutable object into SwitchRegion.header  At SwitchRegion.java:[line 26]
M V EI: jadx.core.dex.regions.SwitchRegion.getCases() may expose internal representation by returning SwitchRegion.cases  At SwitchRegion.java:[line 57]
M V EI: jadx.core.dex.regions.SwitchRegion.getHeader() may expose internal representation by returning SwitchRegion.header  At SwitchRegion.java:[line 49]
M V EI2: new jadx.core.dex.trycatch.ExcHandlerAttr(ExceptionHandler) may expose internal representation by storing an externally mutable object into ExcHandlerAttr.handler  At ExcHandlerAttr.java:[line 11]
M V EI: jadx.core.dex.trycatch.ExcHandlerAttr.getHandler() may expose internal representation by returning ExcHandlerAttr.handler  At ExcHandlerAttr.java:[line 24]
M D REC: Exception is caught when Exception is not thrown in jadx.gui.treemodel.ApkSignature.getCodeInfo()  At ApkSignature.java:[line 171]
M V EI: jadx.gui.ui.codearea.ClassCodeContentPanel.getJavaCodePanel() may expose internal representation by returning ClassCodeContentPanel.javaCodePanel  At ClassCodeContentPanel.java:[line 129]
M D ST: Write to static field jadx.gui.ui.TabbedPane$FocusManager.focusedComp from instance method jadx.gui.ui.TabbedPane$FocusManager.focusGained(FocusEvent)  At TabbedPane.java:[line 432]
M D ST: Write to static field jadx.gui.ui.TabbedPane$FocusManager.focusedComp from instance method jadx.gui.ui.TabbedPane$FocusManager.focusLost(FocusEvent)  At TabbedPane.java:[line 437]
M V EI2: new jadx.core.xmlgen.ResourcesSaver(File, ResourceFile) may expose internal representation by storing an externally mutable object into ResourcesSaver.resourceFile  At ResourcesSaver.java:[line 26]
M V EI: jadx.api.JavaField.getDeclaringClass() may expose internal representation by returning JavaField.parent  At JavaField.java:[line 38]
M V EI: jadx.api.JavaField.getFieldNode() may expose internal representation by returning JavaField.field  At JavaField.java:[line 82]
M V EI2: new jadx.gui.ui.dialog.UsageDialog(MainWindow, JNode) may expose internal representation by storing an externally mutable object into UsageDialog.node  At UsageDialog.java:[line 44]
M D Eq: jadx.gui.ui.codearea.SmaliArea$DebugModel$SmaliV2Style doesn't override org.fife.ui.rsyntaxtextarea.SyntaxScheme.equals(Object)  At SmaliArea.java:[line 1]
M V EI2: new jadx.gui.ui.dialog.CommentDialog(CodeArea, ICodeComment, boolean) may expose internal representation by storing an externally mutable object into CommentDialog.codeArea  At CommentDialog.java:[line 112]
M V EI2: jadx.core.dex.visitors.MethodInvokeVisitor.init(RootNode) may expose internal representation by storing an externally mutable object into MethodInvokeVisitor.root  At MethodInvokeVisitor.java:[line 50]
M V EI: jadx.core.dex.instructions.InvokePolymorphicNode.getBaseCallRef() may expose internal representation by returning InvokePolymorphicNode.baseCallRef  At InvokePolymorphicNode.java:[line 30]
M V EI2: new jadx.core.dex.instructions.InvokePolymorphicNode(MethodInfo, InsnData, IMethodProto, MethodInfo, boolean) may expose internal representation by storing an externally mutable object into InvokePolymorphicNode.baseCallRef  At InvokePolymorphicNode.java:[line 16]
M V EI2: new jadx.core.dex.instructions.InvokePolymorphicNode(MethodInfo, int, IMethodProto, MethodInfo) may expose internal representation by storing an externally mutable object into InvokePolymorphicNode.baseCallRef  At InvokePolymorphicNode.java:[line 22]
M V EI: jadx.core.dex.visitors.typeinference.AbstractTypeConstraint.getRelatedVars() may expose internal representation by returning AbstractTypeConstraint.relatedVars  At AbstractTypeConstraint.java:[line 43]
M V EI2: new jadx.core.dex.visitors.typeinference.AbstractTypeConstraint(InsnNode, InsnArg) may expose internal representation by storing an externally mutable object into AbstractTypeConstraint.insn  At AbstractTypeConstraint.java:[line 18]
M V EI: jadx.core.ProcessClass.getPasses() may expose internal representation by returning ProcessClass.passes  At ProcessClass.java:[line 137]
M V EI: jadx.api.impl.AnnotatedCodeWriter.getRawAnnotations() may expose internal representation by returning AnnotatedCodeWriter.annotations  At AnnotatedCodeWriter.java:[line 167]
M B Eq: jadx.core.utils.DecompilerScheduler$DepInfo defines compareTo(DecompilerScheduler$DepInfo) and uses Object.equals()  At DecompilerScheduler.java:[lines 121-125]
M V EI2: new jadx.gui.ui.codearea.CodeLinkGenerator(CodeArea) may expose internal representation by storing an externally mutable object into CodeLinkGenerator.codeArea  At CodeLinkGenerator.java:[line 26]
M V EI2: new jadx.gui.settings.JadxSettingsWindow(MainWindow, JadxSettings) may expose internal representation by storing an externally mutable object into JadxSettingsWindow.mainWindow  At JadxSettingsWindow.java:[line 90]
M V EI2: new jadx.gui.settings.JadxSettingsWindow(MainWindow, JadxSettings) may expose internal representation by storing an externally mutable object into JadxSettingsWindow.settings  At JadxSettingsWindow.java:[line 91]
M V EI2: jadx.gui.plugins.jadxecute.RenameObjectHelper.renameObject(MainWindow, JNode, String) may expose internal representation by storing an externally mutable object into RenameObjectHelper.mainWindow  At RenameObjectHelper.java:[line 57]
M V EI2: jadx.gui.plugins.jadxecute.RenameObjectHelper.renameObject(MainWindow, JNode, String) may expose internal representation by storing an externally mutable object into RenameObjectHelper.source  At RenameObjectHelper.java:[line 59]
M V EI2: new jadx.core.dex.visitors.regions.RegionMaker(MethodNode) may expose internal representation by storing an externally mutable object into RegionMaker.mth  At RegionMaker.java:[line 69]
M V EI2: new jadx.gui.ui.popupmenu.JPackagePopupMenu(MainWindow, JPackage) may expose internal representation by storing an externally mutable object into JPackagePopupMenu.mainWindow  At JPackagePopupMenu.java:[line 33]
M D NP: Possible null pointer dereference in jadx.gui.ui.codearea.SmaliArea$NormalModel.load() due to return value of called method  Dereferenced at SmaliArea.java:[line 184]
M B FS: Format string should use %n rather than \n in new jadx.gui.ui.ExceptionDialog(Thread, Throwable)  At ExceptionDialog.java:[line 104]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.ExceptionDialog.lambda$new$2(StringBuilder, String, String)  At ExceptionDialog.java:[line 127]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.ExceptionDialog.lambda$new$1(StringBuilder, String, String)  At ExceptionDialog.java:[line 102]
M V EI: jadx.core.dex.attributes.nodes.ForceReturnAttr.getReturnInsn() may expose internal representation by returning ForceReturnAttr.returnInsn  At ForceReturnAttr.java:[line 17]
M V EI2: new jadx.core.dex.attributes.nodes.ForceReturnAttr(InsnNode) may expose internal representation by storing an externally mutable object into ForceReturnAttr.returnInsn  At ForceReturnAttr.java:[line 13]
M D NP: Possible null pointer dereference in jadx.gui.ui.panel.StartPagePanel.fillRecentPanel(JPanel, JScrollPane, MainWindow) due to return value of called method  Dereferenced at StartPagePanel.java:[line 84]
M D SF: Switch statement found in jadx.core.dex.visitors.AttachCommentsVisitor.applyComments(ClassNode, List) where default case is missing  At AttachCommentsVisitor.java:[lines 59-82]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.codearea.XposedAction.generateMethodSnippet(JMethod)  At XposedAction.java:[line 88]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.codearea.XposedAction.generateMethodSnippet(JMethod)  At XposedAction.java:[line 91]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.codearea.XposedAction.generateClassSnippet(JClass)  At XposedAction.java:[line 98]
M V EI2: new jadx.gui.ui.dialog.CommonSearchDialog$ResultsTable(CommonSearchDialog$ResultsModel, CommonSearchDialog$ResultsTableCellRenderer) may expose internal representation by storing an externally mutable object into CommonSearchDialog$ResultsTable.model  At CommonSearchDialog.java:[line 303]
H P Dm: jadx.gui.ui.HeapUsageBar$1.mouseClicked(MouseEvent) forces garbage collection; extremely dubious except in benchmarking code  At HeapUsageBar.java:[line 58]
M V EI2: new jadx.gui.ui.codearea.CommentAction(CodeArea) may expose internal representation by storing an externally mutable object into CommentAction.codeArea  At CommentAction.java:[line 46]
M D SF: Switch statement found in jadx.core.dex.visitors.PrepareForCodeGen.checkEncodedValue(MethodNode, EncodedValue) where default case is missing  At PrepareForCodeGen.java:[lines 356-378]
M V EI2: new jadx.gui.ui.dialog.SetValueDialog(MainWindow, JDebuggerPanel$ValueTreeNode) may expose internal representation by storing an externally mutable object into SetValueDialog.mainWindow  At SetValueDialog.java:[line 40]
M V EI2: new jadx.gui.ui.dialog.SetValueDialog(MainWindow, JDebuggerPanel$ValueTreeNode) may expose internal representation by storing an externally mutable object into SetValueDialog.valNode  At SetValueDialog.java:[line 41]
M V EI: jadx.api.JavaVariable.getMth() may expose internal representation by returning JavaVariable.mth  At JavaVariable.java:[line 24]
M V EI2: new jadx.api.JavaVariable(JavaMethod, VarNode) may expose internal representation by storing an externally mutable object into JavaVariable.varNode  At JavaVariable.java:[line 20]
M V EI2: new jadx.api.JavaVariable(JavaMethod, VarNode) may expose internal representation by storing an externally mutable object into JavaVariable.mth  At JavaVariable.java:[line 19]
M V EI: jadx.api.JavaVariable.getVarNode() may expose internal representation by returning JavaVariable.varNode  At JavaVariable.java:[line 42]
M V EI2: new jadx.gui.ui.treenodes.SummaryNode(MainWindow) may expose internal representation by storing an externally mutable object into SummaryNode.mainWindow  At SummaryNode.java:[line 46]
M V EI: jadx.gui.ui.treenodes.SummaryNode.getIcon() may expose internal representation by returning SummaryNode.ICON  At SummaryNode.java:[line 209]
M D NP: Possible null pointer dereference in jadx.core.codegen.RegionGen.makeIf(IfRegion, ICodeWriter, boolean) due to return value of called method  Method invoked at RegionGen.java:[line 112]
M D NP: Possible null pointer dereference in jadx.core.codegen.RegionGen.makeSwitch(SwitchRegion, ICodeWriter) due to return value of called method  Method invoked at RegionGen.java:[line 246]
M V EI2: new jadx.gui.ui.TabComponent(TabbedPane, ContentPanel) may expose internal representation by storing an externally mutable object into TabComponent.tabbedPane  At TabComponent.java:[line 37]
M V EI2: new jadx.gui.ui.TabComponent(TabbedPane, ContentPanel) may expose internal representation by storing an externally mutable object into TabComponent.contentPanel  At TabComponent.java:[line 38]
M D SF: Switch statement found in jadx.core.dex.visitors.InlineMethods.lambda$updateUsageInfo$0(MethodNode, MethodNode, InsnNode) where default case is missing  At InlineMethods.java:[lines 151-170]
M D SF: Switch statement found in jadx.core.dex.visitors.rename.UserRenames.applyRename(ClassNode, ICodeRename) where default case is missing  At UserRenames.java:[lines 54-75]
M V EI2: jadx.gui.device.debugger.DebugController.startDebugger(JDebuggerPanel, String, int, int) may expose internal representation by storing an externally mutable object into DebugController.debuggerPanel  At DebugController.java:[line 80]
M V EI2: jadx.core.dex.visitors.SignatureProcessor.init(RootNode) may expose internal representation by storing an externally mutable object into SignatureProcessor.root  At SignatureProcessor.java:[line 26]
M D RV: Return value of DebugController$FrameNode.getClsID() ignored, but method has no side effect  At DebugController.java:[line 381]
M V EI2: new jadx.gui.utils.fileswatcher.LiveReloadWorker(MainWindow) may expose internal representation by storing an externally mutable object into LiveReloadWorker.mainWindow  At LiveReloadWorker.java:[line 28]
M C RV: Return value of io.reactivex.Flowable.subscribe(Consumer) ignored in new jadx.gui.utils.fileswatcher.LiveReloadWorker(MainWindow)  At LiveReloadWorker.java:[line 32]
M V EI2: new jadx.gui.ui.dialog.ExcludePkgDialog(MainWindow) may expose internal representation by storing an externally mutable object into ExcludePkgDialog.mainWindow  At ExcludePkgDialog.java:[line 50]
M D NP: Possible null pointer dereference in jadx.core.dex.visitors.regions.LoopRegionVisitor.checkArrayForEach(MethodNode, LoopRegion, InsnNode, InsnNode, IfCondition) due to return value of called method  Dereferenced at LoopRegionVisitor.java:[line 231]
M D NP: Possible null pointer dereference in jadx.core.dex.visitors.regions.LoopRegionVisitor.checkIterableForEach(MethodNode, LoopRegion, IfCondition) due to return value of called method  Dereferenced at LoopRegionVisitor.java:[line 291]
M V EI: jadx.api.JadxDecompiler.getResources() may expose internal representation by returning JadxDecompiler.resources  At JadxDecompiler.java:[line 404]
M V EI: jadx.api.JadxDecompiler.getRoot() may expose internal representation by returning JadxDecompiler.root  At JadxDecompiler.java:[line 456]
M V EI: jadx.api.JadxDecompiler.getPluginManager() may expose internal representation by returning JadxDecompiler.pluginManager  At JadxDecompiler.java:[line 640]
M V EI: jadx.api.JadxDecompiler.getArgs() may expose internal representation by returning JadxDecompiler.args  At JadxDecompiler.java:[line 636]
M V EI: jadx.api.JadxDecompiler.getCustomLoads() may expose internal representation by returning JadxDecompiler.customLoads  At JadxDecompiler.java:[line 144]
M V EI2: new jadx.api.JadxDecompiler(JadxArgs) may expose internal representation by storing an externally mutable object into JadxDecompiler.args  At JadxDecompiler.java:[line 104]
M V EI: jadx.api.JadxDecompiler.getClasses() may expose internal representation by returning JadxDecompiler.classes  At JadxDecompiler.java:[line 390]
M V EI2: jadx.gui.ui.filedialog.FileDialogWrapper.setFileExtList(List) may expose internal representation by storing an externally mutable object into FileDialogWrapper.fileExtList  At FileDialogWrapper.java:[line 38]
M V EI: jadx.gui.ui.filedialog.FileDialogWrapper.getFileExtList() may expose internal representation by returning FileDialogWrapper.fileExtList  At FileDialogWrapper.java:[line 128]
M V EI2: new jadx.gui.ui.filedialog.FileDialogWrapper(MainWindow, FileOpenMode) may expose internal representation by storing an externally mutable object into FileDialogWrapper.mainWindow  At FileDialogWrapper.java:[line 29]
M V EI: jadx.gui.ui.filedialog.FileDialogWrapper.getMainWindow() may expose internal representation by returning FileDialogWrapper.mainWindow  At FileDialogWrapper.java:[line 116]
M D DLS: Dead store to stylesOffset in jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()  At CommonBinaryParser.java:[line 27]
M D DLS: Dead store to stylesStart in jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()  At CommonBinaryParser.java:[line 24]
M B NP: jadx.gui.ui.codearea.FridaAction.lambda$collectMethodArgNames$1(int, JavaMethod, List, Integer, ICodeAnnotation) has Boolean return type and returns explicit null  At FridaAction.java:[line 142]
M B FS: Format string should use %n rather than \n in jadx.gui.ui.codearea.FridaAction.generateFieldSnippet(JField)  At FridaAction.java:[line 172]
M B NP: jadx.core.dex.visitors.ExtractFieldInit.lambda$insnUseExcludedField$5(InsnType, Set, InsnNode) has Boolean return type and returns explicit null  At ExtractFieldInit.java:[line 281]
M C NP: Possible null pointer dereference of codeData in jadx.gui.plugins.jadxecute.AddCommentHelper.updateCommentsData(Consumer) on exception path  Dereferenced at AddCommentHelper.java:[line 179]
M D RCN: Redundant nullcheck of blankComment, which is known to be non-null in jadx.gui.plugins.jadxecute.AddCommentHelper.addInstructionComment(String, int)  Redundant null check at AddCommentHelper.java:[line 80]
M V EI2: new jadx.gui.plugins.jadxecute.AddCommentHelper(MainWindow, JavaNode) may expose internal representation by storing an externally mutable object into AddCommentHelper.node  At AddCommentHelper.java:[line 50]
M V EI2: new jadx.gui.plugins.jadxecute.AddCommentHelper(MainWindow, JavaNode) may expose internal representation by storing an externally mutable object into AddCommentHelper.mainWindow  At AddCommentHelper.java:[line 48]
M P UPM: Private method jadx.gui.plugins.jadxecute.AddCommentHelper.apply(ICodeComment, JavaVariable) is never called  At AddCommentHelper.java:[lines 116-132]
M P SBSC: jadx.gui.plugins.jadxecute.AddCommentHelper.updateCommentsData(Consumer) concatenates strings using + in a loop  At AddCommentHelper.java:[line 180]
M V EI2: new jadx.gui.ui.codearea.CommentSearchAction(CodeArea) may expose internal representation by storing an externally mutable object into CommentSearchAction.codeArea  At CommentSearchAction.java:[line 22]
M V EI: jadx.gui.ui.dialog.CommonSearchDialog$ResultsTableCellRenderer.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int) may expose internal representation by returning CommonSearchDialog$ResultsTableCellRenderer.emptyLabel  At CommonSearchDialog.java:[line 430]
M V EI2: new jadx.gui.ui.dialog.CommonSearchDialog$ResultsTableCellRenderer(CommonSearchDialog) may expose internal representation by storing an externally mutable object into CommonSearchDialog$ResultsTableCellRenderer.this$0  At CommonSearchDialog.java:[line 412]
M D NP: Possible null pointer dereference in jadx.core.dex.visitors.ClassModifier.isRemovedClassInArgs(ClassNode, List) due to return value of called method  Dereferenced at ClassModifier.java:[line 183]
M V EI: jadx.gui.device.debugger.DebugController$FrameNode.getFieldNodes() may expose internal representation by returning DebugController$FrameNode.thisNodes  At DebugController.java:[line 1188]
M V EI2: jadx.gui.device.debugger.DebugController$FrameNode.setFieldNodes(List) may expose internal representation by storing an externally mutable object into DebugController$FrameNode.thisNodes  At DebugController.java:[line 1192]
M V EI2: new jadx.gui.device.debugger.DebugController$FrameNode(DebugController, long, SmaliDebugger$Frame) may expose internal representation by storing an externally mutable object into DebugController$FrameNode.this$0  At DebugController.java:[line 1118]
M V EI2: jadx.gui.device.debugger.DebugController$FrameNode.setRegNodes(List) may expose internal representation by storing an externally mutable object into DebugController$FrameNode.regNodes  At DebugController.java:[line 1180]
M V EI: jadx.gui.device.debugger.DebugController$FrameNode.getRegNodes() may expose internal representation by returning DebugController$FrameNode.regNodes  At DebugController.java:[line 1184]
M C UwF: Unwritten field: jadx.gui.plugins.quark.QuarkReportData$Method.descriptor  At QuarkReportData.java:[line 51]
M C UwF: Unwritten field: jadx.gui.plugins.quark.QuarkReportData$Method.method  At QuarkReportData.java:[line 50]
M P SIC: Should jadx.gui.device.debugger.LogcatController$LogcatFilter be a _static_ inner class?  At LogcatController.java:[lines 167-249]
M P SS: Unread field: jadx.gui.device.debugger.smali.Smali.printBytecode; should this field be static?  At Smali.java:[line 81]
M P UuF: Unused field: jadx.gui.plugins.quark.QuarkReportData$InvokePlace.first  In QuarkReportData.java
M P UuF: Unused field: jadx.gui.ui.codearea.SmaliTokenMaker.yyline  In SmaliTokenMaker.java
M P SIC: Should jadx.gui.ui.panel.LogcatPanel$CheckComboRenderer be a _static_ inner class?  At LogcatPanel.java:[lines 376-388]
M D UrF: Unread public/protected field: jadx.gui.device.protocol.ADB$Process.ppid  At ADB.java:[line 337]
M P SIC: Should jadx.gui.ui.dialog.ADBDialog$DebugSetting be a _static_ inner class?  At ADBDialog.java:[lines 609-708]
M P UrF: Unread field: jadx.gui.ui.codearea.SmaliTokenMaker.zzPushbackPos  At SmaliTokenMaker.java:[line 1299]
M P SS: Unread field: jadx.gui.device.debugger.smali.Smali.printFileOffset; should this field be static?  At Smali.java:[line 80]
M P UuF: Unused field: jadx.gui.ui.codearea.SmaliTokenMaker.yycolumn  In SmaliTokenMaker.java
M P SS: Unread field: jadx.gui.ui.codearea.SmaliArea$DebugModel.keyID; should this field be static?  At SmaliArea.java:[line 195]
M D UrF: Unread public/protected field: jadx.gui.device.protocol.ADB$Process.user  At ADB.java:[line 335]
M P UuF: Unused field: jadx.gui.plugins.quark.QuarkReportData$InvokePlace.second  In QuarkReportData.java
M P SIC: Should jadx.gui.device.debugger.DebugController$CurrentInfo be a _static_ inner class?  At DebugController.java:[lines 1460-1473]
M P UuF: Unused field: jadx.gui.ui.codearea.SmaliTokenMaker.yychar  In SmaliTokenMaker.java
M P UrF: Unread field: jadx.gui.ui.codearea.SmaliTokenMaker.zzAtBOL  At SmaliTokenMaker.java:[line 1160]
M C NP: Read of unwritten field crimes in jadx.gui.plugins.quark.QuarkReportPanel.initUI()  At QuarkReportPanel.java:[line 88]
M C NP: Read of unwritten field crimes in jadx.gui.plugins.quark.QuarkReportPanel.prepareData()  At QuarkReportPanel.java:[line 74]
M M IS: Inconsistent synchronization of jadx.gui.utils.logs.LogCollector.listener; locked 60% of time  Unsynchronized access at LogCollector.java:[line 105]
M M IS: Inconsistent synchronization of jadx.gui.utils.logs.LogCollector.errors; locked 50% of time  Unsynchronized access at LogCollector.java:[line 116]
M M IS: Inconsistent synchronization of jadx.gui.utils.logs.LogCollector.layout; locked 50% of time  Unsynchronized access at LogCollector.java:[line 87]
M M IS: Inconsistent synchronization of jadx.gui.ui.dialog.SearchDialog$SearchEventEmitter.emitter; locked 50% of time  Unsynchronized access at SearchDialog.java:[line 373]
M M IS: Inconsistent synchronization of jadx.gui.search.SearchTask.resultsLimit; locked 66% of time  Unsynchronized access at SearchTask.java:[line 53]
M M IS: Inconsistent synchronization of jadx.gui.utils.logs.LogCollector.warnings; locked 50% of time  Unsynchronized access at LogCollector.java:[line 78]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeSearch(MethodNode) may expose internal representation by storing an externally mutable object into TypeSearch.mth  At TypeSearch.java:[line 47]
SpotBugs ended with exit code 1
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeAssign(RootNode, InvokeNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeAssign.invokeNode  At TypeBoundInvokeAssign.java:[line 24]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeAssign(RootNode, InvokeNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeAssign.root  At TypeBoundInvokeAssign.java:[line 23]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeAssign(RootNode, InvokeNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeAssign.genericReturnType  At TypeBoundInvokeAssign.java:[line 25]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundFieldGetAssign(RootNode, IndexInsnNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundFieldGetAssign.getNode  At TypeBoundFieldGetAssign.java:[line 22]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundFieldGetAssign(RootNode, IndexInsnNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundFieldGetAssign.root  At TypeBoundFieldGetAssign.java:[line 21]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundFieldGetAssign(RootNode, IndexInsnNode, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundFieldGetAssign.initType  At TypeBoundFieldGetAssign.java:[line 24]
M P UPM: Private method jadx.core.dex.visitors.DotGraphVisitor$DumpDotGraph.escape(Object) is never called  At DotGraphVisitor.java:[lines 309-312]
M C RV: Check to see if return value of java.util.Comparator.compare(Object, Object) is equal to -2  At BlockExceptionHandler.java:[line 588]
M D NP: Possible null pointer dereference in jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse.getType() due to return value of called method  Dereferenced at TypeBoundInvokeUse.java:[line 37]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse(RootNode, BaseInvokeNode, RegisterArg, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeUse.arg  At TypeBoundInvokeUse.java:[line 21]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse(RootNode, BaseInvokeNode, RegisterArg, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeUse.root  At TypeBoundInvokeUse.java:[line 19]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse(RootNode, BaseInvokeNode, RegisterArg, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeUse.invokeNode  At TypeBoundInvokeUse.java:[line 20]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse(RootNode, BaseInvokeNode, RegisterArg, ArgType) may expose internal representation by storing an externally mutable object into TypeBoundInvokeUse.genericArgType  At TypeBoundInvokeUse.java:[line 22]
M V EI: jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse.getArg() may expose internal representation by returning TypeBoundInvokeUse.arg  At TypeBoundInvokeUse.java:[line 50]
M V EI2: new jadx.core.dex.instructions.InsnDecoder(MethodNode) may expose internal representation by storing an externally mutable object into InsnDecoder.method  At InsnDecoder.java:[line 42]
M B IC: Initialization of jadx.api.metadata.ICodeMetadata accesses class jadx.api.metadata.impl.CodeMetadataStorage, which isn't initialized yet  At ICodeMetadata.java:[line 12]
H I Dm: Found reliance on default encoding in jadx.core.dex.visitors.SimplifyVisitor.simplifyStringConstructor(MethodNode, ConstructorInsn): new String(byte[])  At SimplifyVisitor.java:[line 196]
M V EI: jadx.core.dex.visitors.typeinference.TypeBoundCheckCastAssign.getInsn() may expose internal representation by returning TypeBoundCheckCastAssign.insn  At TypeBoundCheckCastAssign.java:[line 50]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundCheckCastAssign(RootNode, IndexInsnNode) may expose internal representation by storing an externally mutable object into TypeBoundCheckCastAssign.root  At TypeBoundCheckCastAssign.java:[line 19]
M V EI2: new jadx.core.dex.visitors.typeinference.TypeBoundCheckCastAssign(RootNode, IndexInsnNode) may expose internal representation by storing an externally mutable object into TypeBoundCheckCastAssign.insn  At TypeBoundCheckCastAssign.java:[line 20]
M V EI2: jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.init(RootNode) may expose internal representation by storing an externally mutable object into TypeInferenceVisitor.root  At TypeInferenceVisitor.java:[line 82]
M D DLS: Dead store to $L4 in jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(MethodNode, SSAVar)  At TypeInferenceVisitor.java:[line 177]
M P UuF: Unused field: jadx.core.codegen.json.cls.JsonField.type  In JsonField.java
M D IC: Initialization circularity between jadx.core.dex.instructions.args.ArgType and jadx.core.dex.instructions.args.PrimitiveType  At ArgType.java:[lines 21-936]
M V MS: jadx.core.xmlgen.ParserConstants.RADIX_MULTS should be package protected  At ParserConstants.java:[line 134]
M V MS: jadx.core.xmlgen.ParserConstants.PLURALS_MAP is a mutable collection which should be package protected  At ParserConstants.java:[line 183]
M V MS: jadx.core.utils.DebugChecks.checksEnabled isn't final but should be  At DebugChecks.java:[line 30]
M M IS: Inconsistent synchronization of jadx.core.dex.nodes.FieldNode.useIn; locked 50% of time  Unsynchronized access at FieldNode.java:[line 96]
M M IS: Inconsistent synchronization of jadx.api.JadxDecompiler.resources; locked 50% of time  Unsynchronized access at JadxDecompiler.java:[line 150]
M M IS: Inconsistent synchronization of jadx.api.JadxDecompiler.protoXmlParser; locked 75% of time  Unsynchronized access at JadxDecompiler.java:[line 152]
M M IS: Inconsistent synchronization of jadx.api.JavaClass.listsLoaded; locked 75% of time  Unsynchronized access at JavaClass.java:[line 78]
M M IS: Inconsistent synchronization of jadx.api.JadxDecompiler.binaryXmlParser; locked 75% of time  Unsynchronized access at JadxDecompiler.java:[line 151]
SpotBugs ended with exit code 1

BUILD SUCCESSFUL in 20s
36 actionable tasks: 27 executed, 9 up-to-date
